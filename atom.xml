<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wendyeq Blog</title>
  
  <subtitle>人总是要有些理想和信仰</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wendyeq.me/"/>
  <updated>2017-09-12T03:27:07.047Z</updated>
  <id>http://wendyeq.me/</id>
  
  <author>
    <name>wendyeq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>终身学习</title>
    <link href="http://wendyeq.me/2017/03/26/learning/"/>
    <id>http://wendyeq.me/2017/03/26/learning/</id>
    <published>2017-03-26T03:57:18.000Z</published>
    <updated>2017-09-12T03:27:07.047Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/03/26/learning/learning.jpg" title="learning"><p>因为不知道怎么选MOOC课程的原因（名牌大学太多了，不知道选哪个学校的什么课程好），花了一个多星期把吴军的《大学之路–陪女儿在美国选大学》上下册读了一遍。吴军的书一如既往的通俗易懂，读起来很顺畅。不像其他的书籍，读起来非常难，特别是那些翻译过来的畅销书，我觉得这跟文化背景有点关系。</p><p>自从读过《如何阅读一本书》之后就知道一定要先读序、前言和目录，读完这些之后对整本书的逻辑脉络也就非常清晰。</p><p>开宗明义，教育是一辈子的事。</p><blockquote><p>人生是场马拉松，拿到一所名牌大学的烫金毕业证书，不过是在马拉松赛跑中取了一个还不错的站位而已，人生–这所真正的大学–路途才刚刚开始。看过马拉松比赛的人都知道，在起跑的那一瞬间道路是很拥挤的，但是当1/4赛程过去之后，选手们彼此的距离就拉开了，在起跑时占得的那一点便宜到这时早就荡然无存了。很多中国的家长都在说不能让孩子输在起跑线上，想方设法让孩子在起跑线上尽可能地抢位置。但其实，成功的道路并不像想象得那么拥挤，在人生的马拉松道路上，绝大部分人跑不到一半就主动退下来了。到后来，剩下的少数人不是嫌竞争对手太多，而是发愁怎样找一个同伴陪自己一同跑下去。因此，教育是一辈子的事情，笑到最后的是一辈子接受教育的人。</p></blockquote><p>作为跑过两次半程马拉松的人来说，就是这种感觉。</p><p>第一次跑半程马拉松是15年12月在广州跑的，因为上厕所的原因只能排到最后才开跑。虽然是起跑的位置比较靠后，但是在起跑线的位置还是非常拥挤，到了2公里外就很稀疏，在后面不断的往前去超越那些已经慢下来或者在走路的人，非常爽。<br>第二次是在16年11月的杭州，刚好是杭马30周年，特意从广州去杭州参加这次盛会。这次跟在广州不一样，这次去得早，跟在跑全马的后面，不算太拥挤。不过在西湖边的时候道路很窄，大家都挤在一起，当时还担心发生踩踏事件。也是在那里看到伊一，15年的时候大家的起点都一样，都是跑半马，现在人家已经跑全马，果然人与人之间是不能对比的。跑到最后几百米的时候，腿已开始抽筋，只能慢慢走到终点，还好安全完赛。不敢忘记跑步的目的是为了健康而不是逞能，毕竟代价太大了。同样学习的目的也不是纯粹为了赚钱，而是兴趣。</p><p>吴军一直都对教育很重视，从他陪着女儿去选大学都能写出两本书来就可见一般。据说他离开腾讯回美国也是为了她女儿读书，他女儿上高中，他想要更多的时间陪陪她。可能也与当时腾讯搜索一直都是不怎么样，最后还跟搜狗合并了有关。</p><p>在《大学之路》上我看到了这几点：</p><ol><li>通才教育与专才教育</li><li>捐赠奉献的精神，校友之间的关系</li><li>认可学校的办学理念才能真正学到东西</li><li>美国私立大学的学费很贵</li><li>私立大学的研究生相对于本科更容易进，本科教育不赚钱，研究生教育才赚钱</li><li>美国的治安不太好？对好几个大学的治安都进行了详细的说明，可能是因为女儿的原因，作为父亲对安全这块非常看重，或者治安真的不怎么好。</li></ol><p>对于通才教育与专才教育，我自身比较深刻的一个理解是无论是通才教育还专才教育最终都必须要经历，这个过程不一定是在大学，而是在整个人生。<br>以我自身为例子，我的母校广东工业大学施行的是专才教育，按一个老师的说法，在这里学的是应用，而不是学做科研。如果不是在这里学会了编程那么能否就业都不好说，如果仅仅只会编程，那么之后的职业天花板将很难打破。选修课的时候那些工程学科一般都选不上的，文化艺术类的课是没几个人去选，最后选不上选修课的只能被分配到这些文化艺术课程上。印象最深的是《动画赏析》这门课，没几个人是主动选择修习这门课的，但是这门课改变了我都动画艺术的看法，以前一直都是认为，动画片都是小孩子看的，真是 too young too simple ，通常通过动画更能表达对人性的思考。在这门课上认识了皮克斯、宫崎骏、迪士尼等优秀的工作室和动画人。</p><p>真正适合自己的才是好学校，而不是只看学校排名和专业是否热门。有个高中同学非常聪明，数理化都很厉害，在英语不及格的情况下都能考上华南理工大学，在我们那个小县城里面算是非常厉害的啦。很可惜他选了软件工程这个专业，因为很多课都是全英上课的，学起来非常吃力，逐渐就对学习失去兴趣。虽然起点比其他人高了，但是走的路更弯。</p><p>编程是一辈子的事，但是随着工作经验的积累，项目规模的变大，仅仅会编程是远远不够。毕竟软件开发是个系统性的工程，是多人协作的结果。现在已经不是单打独斗能把事情做好，团队协作、沟通协同、项目管理等占的比重越来越大。</p><p>所以在有所专长的情况下要开始完善自身的不足，文史艺术等要有所了解，要不然人生不就非常无趣。<br>技能是用于生存的，但是能生存下来之后，要想想怎么样才是生活？什么样的生活才是自己想要的。</p><p>随着生存的问题解决之后，开始关注以下几方面的内容：<br>手冲咖啡，练习了几年，算是小有收获。<br>古典音乐，从TVB的《毕打自己人》的主题曲：G大调弦乐小夜曲，开始喜欢古典音乐，但是至今没有入门。<br>艺术，动画电影经常看，不看连续剧类型的动画。</p><p>努力成为一个有趣的人，过自己想要的生活，加油！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/03/26/learning/learning.jpg&quot; title=&quot;learning&quot;&gt;
&lt;p&gt;因为不知道怎么选MOOC课程的原因（名牌大学太多了，不知道选哪个学校的什么课程好），花了一个多星期把吴军的《大学之路–陪女儿在美国选大学》上下册读了
      
    
    </summary>
    
    
      <category term="周记" scheme="http://wendyeq.me/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第四周-有付出才有收获</title>
    <link href="http://wendyeq.me/2017/03/19/perseverance/"/>
    <id>http://wendyeq.me/2017/03/19/perseverance/</id>
    <published>2017-03-19T15:04:35.000Z</published>
    <updated>2017-09-12T03:27:07.025Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/03/19/perseverance/MITx6.00.1.png" title="edx"><p>认证来自<a href="https://courses.edx.org/certificates/b5b72cfa6ada4f38abe5d1be9661667d" target="_blank" rel="noopener">edx</a></p><p>经过近3个月的坚持，终于拿下了第一个edx认证！难能可贵！</p><p>不是课程有多难，这只是个introductory级别的课程。认真上完课，坚持把习题做完都能通过，更何况我还有Python的使用经验开发人员。</p><p>但是现实却是差点没有坚持下去，而且很有可能通不过认证。因为上课是有时间限制的，必须在指定的时间之前完成习题和考试。如果有一两周没有跟上节奏，错过了习题，对整个学习过程是致命的打击。由于春节的缘故，差一点点就没有跟上节奏。发现Blog 也有将近2个月没写。</p><p>如果我不是一开始就选择付费认证，那么经过春节之后可能就会放弃。毕竟不付出金钱，放弃的成本实在是太低了（时间成本其实还是很高的）。</p><p>人经常会高估自己，人性本懒！如果没有一些外力的约束是否还会主动的去完成一些事情，是否有强大的动力坚持下去。而这将是人走向成功的必要条件–自律！</p><blockquote><p>成功的道路并不像想象得那么拥挤，在人生的马拉松道路上，绝大部分人跑不到一半就主动退下来了。到后来，剩下的少数人不是嫌竞争对手太多，而是发愁怎样找一个同伴陪自己一同跑下去。因此，教育是一辈子的事情，笑到最后的是一辈子接受教育的人。</p></blockquote><p>共勉！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/03/19/perseverance/MITx6.00.1.png&quot; title=&quot;edx&quot;&gt;
&lt;p&gt;认证来自&lt;a href=&quot;https://courses.edx.org/certificates/b5b72cfa6ada4f38abe5d1b
      
    
    </summary>
    
    
      <category term="edx" scheme="http://wendyeq.me/tags/edx/"/>
    
      <category term="周记" scheme="http://wendyeq.me/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第三周-ignorance</title>
    <link href="http://wendyeq.me/2017/01/22/ignorance/"/>
    <id>http://wendyeq.me/2017/01/22/ignorance/</id>
    <published>2017-01-22T13:10:32.000Z</published>
    <updated>2017-09-12T03:27:06.988Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/01/22/ignorance/ignorance.jpg" title="ignorance"><p>题图来自网络</p><p>国人对红包的热衷程度简直可怕，动不动就说发个红包，没有什么是一个红包解决不了的，有的话，那就发两个。今年支付宝又在搞“集五福”了，沉默已久的群终于活跃起来，到处都是求敬业福的，除了大号要合成，小号也要。你会发现很多人都在花费大量的时间去做这些无聊的事情，不仅骚扰一堆的熟人，有的人还因此被人诈骗。</p><p>不劳而获和贪小便宜都是人性的弱点，很多运营策略都是根据人性的弱点进行设计的。“买的不如卖的精”，所有的活动都是测算过的，你很难占到商家的便宜。<br>很多人都没有意识到时间的宝贵。讲个题内话，最近一年经常可以看到很多患病众筹的信息，可想而知生命是多么的脆弱，时间是多么的宝贵，而我们在有限的时间里能在这个世界上留下什么？</p><p>其实“集五福”也不是一无是处的，最起码他代替了社交活动的打招呼方式，由“吃饭没有”换为“有没有集到敬业福”。<br>不热衷于这些无聊的事，也算为自己不善社交找到了个理由。</p><p>自从大学毕业之后，每年长辈给的红包或者公司的红包我基本都是不拆的。在我看来这些都是长辈亲戚朋友对我的祝福和期盼，我都有保存起来。但是以前有一种情况下我是会拆，就是刚好没有钱而且去银行取钱也不方便的时候，我会拆一两个救急。随着移动支付的发展，这种场景很久都没有发生。<br>到现在差不多还剩下200封，以前爷爷会在红包上亲手写一些文字对我鼓励和祝福，但是再也没有这种机会！</p><p>已经把<a href="https://www.edx.org/course/artificial-intelligence-ai-columbiax-csmm-101x" target="_blank" rel="noopener">Artificial Intelligence (AI)</a> 这门课第一周的内容看完，跟我的期望相差太远了。再看看<a href="https://www.edx.org/course/machine-learning-columbiax-csmm-102x" target="_blank" rel="noopener">Machine Learning</a>这门课的水平怎么样。<br>突然很喜欢<a href="https://www.edx.org/course/ignorance-anux-igno101x-0" target="_blank" rel="noopener">ignorance</a> 这门课，也是刚看完第一周的内容，我们知道的比我们认为我们知道的要少。比如我们以为我们能猜到彩票的开奖号码，而去买彩票，然而在有些人的眼里这些人是在纳智商税。我也买过彩票，在淘宝网上随机号码买一年，网上不能卖彩票之后就没有买过了，主要是不喜欢去投注点兑奖（奇怪的理由）。学过概率的人都知道彩票是怎么一回事，冲着中大奖去的就不要白费心机了，还是想想体彩有没有为中国的足球事业发展做贡献更有意思。猜某日股市的涨跌也是类似。</p><p>有时候人能看到别人在做一些无聊、无意义的事情，殊不知自己也经常做一些无聊、无意义的事情。吾日三省吾身！共勉。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/01/22/ignorance/ignorance.jpg&quot; title=&quot;ignorance&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;国人对红包的热衷程度简直可怕，动不动就说发个红包，没有什么是一个红包解决不了的，有的话，那就发两个。今年支付宝又在
      
    
    </summary>
    
    
      <category term="周记" scheme="http://wendyeq.me/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第二周-尝试突破</title>
    <link href="http://wendyeq.me/2017/01/15/try/"/>
    <id>http://wendyeq.me/2017/01/15/try/</id>
    <published>2017-01-15T15:50:12.000Z</published>
    <updated>2017-09-12T03:27:06.965Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/01/15/try/edx.png" title="edx"><p>题图来自<a href="http://docs.edx.org/" target="_blank" rel="noopener">edx</a></p><p>这周在edx 上的<a href="https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-9" target="_blank" rel="noopener">Introduction to Computer Science and Programming Using Python</a> 课程做了认证，价格49刀，学习完课程并通过测试之后将会有个电子证书。</p><p>为什么要做这个课程的认证呢？</p><ul><li>第一是课程确实讲的很好，声音好听，讲课的教授是个非常牛的人–<a href="https://www.csail.mit.edu/user/807" target="_blank" rel="noopener">ERIC GRIMSON</a>。</li><li>第二是也算是专业对口的一门课程，虽然比较简单，但是对以后的发展还是有点用处。</li><li>第三是价格–49刀，edx上很多课程的价格都是49、99、150、300等。49应该是最低的一档。刚好PayPal上还有30多刀几年都没有花，只要再付十几刀即可。</li><li>第四是仪式感与认可，完成一个课程是要花费大量的时间，投入与产出是否成比例，学习完之后除了学到知识之外是否还能得到其它的认可。如果不想得到认可和获得仪式感跟着课程学完即可，不需要付认证费。</li><li>第五是情怀，edx是一个非营利性的组织，他可以按学校的方式来进行教学或者采用创新的方式，而不需要考虑是否盈利的问题，课程视频都是放在youtube。在edx可以选修很多世界名牌大学和大公司的课程，但是如果这个项目，有一天因为资金的问题而关闭的话，那将是世界的一大损失。所以在我力所能及的地方，将会提供必要的帮助–类似香港的买旗？</li><li>第六是人性，没有付出的事情一般都很难坚持的，想想拖延症和懒惰。</li></ul><p>在edx 上还有两门课程比较想学的，一个是<a href="https://www.edx.org/course/artificial-intelligence-ai-columbiax-csmm-101x" target="_blank" rel="noopener">Artificial Intelligence (AI)</a> 和 <a href="https://www.edx.org/course/machine-learning-columbiax-csmm-102x" target="_blank" rel="noopener">Machine Learning</a>。这是哥伦比亚大学中人工智能微硕士4门课程中的2门，就是认证费贵了点。</p><p><strong>在大好的年华不投资自己投资什么？难道用在吃喝玩乐？</strong><br><em>今年做了6K的预算在自我升值上，包括MOOC、书报、电子读物等，但不包括电子产品。</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/01/15/try/edx.png&quot; title=&quot;edx&quot;&gt;
&lt;p&gt;题图来自&lt;a href=&quot;http://docs.edx.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;edx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这周在edx 上
      
    
    </summary>
    
    
      <category term="周记" scheme="http://wendyeq.me/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第一周 - 勿忘初心</title>
    <link href="http://wendyeq.me/2017/01/08/first/"/>
    <id>http://wendyeq.me/2017/01/08/first/</id>
    <published>2017-01-08T13:15:04.000Z</published>
    <updated>2017-09-12T03:27:06.928Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/01/08/first/first.jpg" title="first"><p>2017年1月8日拍摄于天河公园</p><p>一直以来想用文字记录一些东西，无奈意志力和执行力都不给力，实际与计划永远都是背道而驰。反思过去，是时候开始写周记了，从17年的第一周开始每周都写一篇，记录一些想记录的内容。</p><p>这周有个好兄弟向女朋友求婚成功，祝福他们两个。</p><p>周日下午去天河公园散步的时候发现了很多之前一直都没有发现的景色。在天河公园跑步也跑了很多次，要么是早上去跑，要么是晚上去跑，跑得多了路线也相对固定。说实话有点腻了，所以有时候会顺时针跑，隔几天又逆时针跑，总是不断的给自己找新鲜感。以为自己对天河公园很熟悉，但是这次去散步的时候是却发现了之前一直没发现或误解的地方。2个小时走了7公里，从来没有这么慢过。看到了有意思的竹林，3个人一起打的麻将，激烈的羽毛球和乒乓球，有趣的小孩。在这之前每次我跑步经过的地方，那个我一直都以为是猜谜语的地方，居然是公园相亲活动挂广告的地方。那些挂在红线上的小纸板一直都以为是谜题来的，原来是相亲的个人简介。先入为主产生的误导，系统1错误的概率还挺高的。</p><p>每次的行迹匆匆，错失了多少沿途美丽的风景？</p><p>参加了悦跑圈的2017全年挑战，需要跑2017KM。分解到每个季度需要跑505KM，每个月需要跑168KM，平均每次需要跑10KM左右。希望今年能跑一次广州的全马，或者2018年年初去香港跑一次全马。</p><p>开始学习edX上的<a href="https://courses.edx.org/courses/course-v1:BerkeleyX+GG101x+1T2017/info" target="_blank" rel="noopener">The Science of Happiness</a> 和 <a href="https://courses.edx.org/courses/course-v1:UQx+Think101x+3T2016/info" target="_blank" rel="noopener">The Science of Everyday Thinking</a> 课程。由于英语水平有限，特别是The Science of Happiness 上的大段英文材料，阅读起来相当的吃力😭。The Science of Everyday Thinking 里面的对话比较多，视频字幕通过Google 翻译的质量也好差，看起来好累。edX 上太多课程，刚开始的时候选了好多课程。因为好多课都想学，但是每天就只有那么多时间，计划每天抽1到2个小时进行学习。只能放弃一些学习的动力没这么强烈的课程，放弃才是最痛苦的。</p><p>电影《星球大战外传：侠盗一号》里面甄子丹杀入枪林弹火的身影震撼人心。电影的部分主旨与这周阅读到的生死观非常吻合。</p><blockquote><p>我读了爱因斯坦和他朋友的一段谈话，这位物理学家是一位看穿了时空的智者。他讲，我们对死亡的恐惧有点莫名奇妙，我们站在“有”的世界，试图理解“无”的问题，按照“有”的逻辑，对“无”产生恐惧。</p></blockquote><blockquote><p>没有个体的死亡，就没有整体的发展。凯文·凯利讲，只有一种细胞不死，就是癌细胞，但是整个机体会死掉，然后它也会死掉。如果我们人不死，我们的社会就要死亡，最终每一个个体也难逃死亡的厄运。有生就有死，这是我们宇宙的基本规律。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/01/08/first/first.jpg&quot; title=&quot;first&quot;&gt;
&lt;p&gt;2017年1月8日拍摄于天河公园&lt;/p&gt;
&lt;p&gt;一直以来想用文字记录一些东西，无奈意志力和执行力都不给力，实际与计划永远都是背道而驰。反思过去，是时候开始写周记了，从
      
    
    </summary>
    
    
      <category term="周记" scheme="http://wendyeq.me/tags/%E5%91%A8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>lfs101-command-line-02</title>
    <link href="http://wendyeq.me/2017/01/07/lfs101-command-line-02/"/>
    <id>http://wendyeq.me/2017/01/07/lfs101-command-line-02/</id>
    <published>2017-01-07T14:20:05.000Z</published>
    <updated>2017-09-12T03:27:06.812Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/01/07/lfs101-command-line-02/vim.jpg" title="vim"><p>题图来自<a href="http://www.vim.org/" target="_blank" rel="noopener">vim.org</a></p><p>简单介绍tar、gzip、bzip2、xz、zip、dd、nano、gedit、vi\vim、emacs的用法。</p><h3 id="tar-用法"><a href="#tar-用法" class="headerlink" title="tar 用法"></a>tar 用法</h3><p><code>tar</code>: 是一个打包命令而不是压缩命令，把一堆的文件或目录打成一个<code>.tar</code>扩展名的文件（扩展名其实是随便取都可以的，但是习惯用这个），用于备份或传输。通过参数的方式可以使用gzip、bzip2对打包的文件进行压缩。</p><p>常见用法：<br><code>-c</code>: 创建打包文件<br><code>-v</code>: 显示打包过程<br><code>-f</code>: 指定打包文件<br><code>-z</code>: 用gzip处理打包文件<br><code>-j</code>: 用bzip2处理打包文件<br><code>-J</code>: 用xz处理打包文件<br><code>-t</code>: 查看打包文件<br><code>-x</code>: 解压打包文件，不需要指定压缩类型，tar会自动判断<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf goagent.tar goagent  <span class="comment"># 对goanget 目录进行打包，打包后的文件是goagent.tar</span></span><br><span class="line">tar -zcvf goagent.tar.gz goagent  <span class="comment"># 对goanget 目录进行打包并用gzip进行压缩，打包后的文件是goagent.tar.gz</span></span><br><span class="line">tar -jcvf goagent.tar.bz2 goagent  <span class="comment"># 对goanget 目录进行打包并用bzip2进行压缩，打包后的文件是goagent.tar.bz2</span></span><br><span class="line">tar -jtvf goagent.tar.bz2  <span class="comment"># 查看goagent.tar.bz2打包文件里面的内容</span></span><br><span class="line">tar -xvf goagent.tar.bz2  <span class="comment"># 解压goagent.tar.bz2文件</span></span><br><span class="line"></span><br><span class="line">wendyeq temp $ ls -al</span><br><span class="line">total 35608</span><br><span class="line">drwxr-xr-x  <span class="number"> 6 </span>wendyeq  staff     <span class="number"> 204 </span><span class="number"> 1 </span><span class="number"> 7 </span>23:01 .</span><br><span class="line">drwxr-xr-x <span class="number"> 13 </span>wendyeq  staff     <span class="number"> 442 </span><span class="number"> 1 </span><span class="number"> 7 </span>22:59 ..</span><br><span class="line">drwxr-xr-x@<span class="number"> 10 </span>wendyeq  staff     <span class="number"> 340 </span>12<span class="number"> 26 </span>23:36 goagent</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>wendyeq  staff <span class="number"> 7818752 </span><span class="number"> 1 </span><span class="number"> 7 </span>22:59 goagent.tar</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>wendyeq  staff <span class="number"> 5241309 </span><span class="number"> 1 </span><span class="number"> 7 </span>23:01 goagent.tar.bz2</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>wendyeq  staff <span class="number"> 5168639 </span><span class="number"> 1 </span><span class="number"> 7 </span>23:00 goagent.tar.gz</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="gzip-用法"><a href="#gzip-用法" class="headerlink" title="gzip 用法"></a>gzip 用法</h3><p><code>gzip</code>: gzip 是使用广泛的压缩程序，常用<code>.gz</code>扩展名。gzip 对文件进行压缩，不能对目录进行压缩，所以一般与<code>tar</code>一起使用。</p><p>常见用法：<br><code>-v</code>: 显示压缩过程<br><code>-l</code>: 列出压缩文件的相关信息<br><code>-d</code>: 解压文件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wendyeq temp <span class="variable">$ </span>gzip -v goagent.tar  <span class="comment"># 压缩goagent.tar 文件</span></span><br><span class="line"><span class="symbol">goagent.tar:</span>       <span class="number">33.9</span>% -- replaced <span class="keyword">with</span> goagent.tar.gz</span><br><span class="line">wendyeq temp <span class="variable">$ </span>gzip -l goagent.tar.gz  <span class="comment"># 列出goagent.tar 的相关信息</span></span><br><span class="line">  compressed uncompressed  ratio uncompressed_name</span><br><span class="line">     <span class="number">5168651</span>      <span class="number">7823360</span>  <span class="number">33.9</span>% goagent.tar</span><br><span class="line">wendyeq temp <span class="variable">$ </span>gzip -d goagent.tar.gz  <span class="comment"># 解压goagent.tar.gz 文件</span></span><br></pre></td></tr></table></figure><h3 id="bzip2-用法"><a href="#bzip2-用法" class="headerlink" title="bzip2 用法"></a>bzip2 用法</h3><p><code>bzip2</code>: 一种<code>.bz2</code>扩展名的压缩方式。</p><p>常见用法：<br><code>-v</code>: 显示压缩过程<br><code>-k</code>: 压缩后保留原文件，默认是删除原文件的。<br><code>-d</code>: 解压文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">bzip2</span> <span class="selector-tag">-v</span> <span class="selector-tag">goagent</span><span class="selector-class">.tar</span>  # 压缩<span class="selector-tag">goagent</span><span class="selector-class">.tar</span> 文件，并删除<span class="selector-tag">goagent</span><span class="selector-class">.tar</span></span><br><span class="line"><span class="selector-tag">bzip2</span> <span class="selector-tag">-kv</span> <span class="selector-tag">goagent</span><span class="selector-class">.tar</span>  # 压缩<span class="selector-tag">goagent</span><span class="selector-class">.tar</span> 文件，不删除<span class="selector-tag">goagent</span><span class="selector-class">.tar</span></span><br><span class="line"><span class="selector-tag">bzip2</span> <span class="selector-tag">-dv</span> <span class="selector-tag">goagent</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span>  # 解压<span class="selector-tag">goagent</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span> 文件</span><br></pre></td></tr></table></figure><h3 id="xz-用法"><a href="#xz-用法" class="headerlink" title="xz 用法"></a>xz 用法</h3><p><code>xz</code>: 一种<code>.xz</code>扩展名的压缩方式。压缩率比gzip、bzip2都高，所以压缩的时候速度比较慢。</p><p>常见用法：<br><code>-v</code>: 显示压缩过程<br><code>-k</code>: 压缩后保留原文件，默认是删除原文件的。<br><code>-d</code>: 解压文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">xz</span> <span class="selector-tag">-v</span> <span class="selector-tag">goagent</span><span class="selector-class">.tar</span>  # 压缩<span class="selector-tag">goagent</span><span class="selector-class">.tar</span> 文件，并删除<span class="selector-tag">goagent</span><span class="selector-class">.tar</span></span><br><span class="line"><span class="selector-tag">xz</span> <span class="selector-tag">-kv</span> <span class="selector-tag">goagent</span><span class="selector-class">.tar</span>  # 压缩<span class="selector-tag">goagent</span><span class="selector-class">.tar</span> 文件，不删除<span class="selector-tag">goagent</span><span class="selector-class">.tar</span></span><br><span class="line"><span class="selector-tag">xz</span> <span class="selector-tag">-dv</span> <span class="selector-tag">goagent</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span>  # 解压<span class="selector-tag">goagent</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span> 文件</span><br></pre></td></tr></table></figure><h3 id="zip-用法"><a href="#zip-用法" class="headerlink" title="zip 用法"></a>zip 用法</h3><p><code>zip</code>: 一种<code>.zip</code>扩展名的压缩方式。用的比较广泛，windows 也经常用这个格式。不带自解压参数，用<code>unzip</code>进行解压。</p><p>常见用法：<br><code>-q</code>: 不显示压缩过程<br><code>-r</code>: 递归处理，将指定目录下的所有文件和子目录一并压缩</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">zip</span> <span class="selector-tag">-qr</span> <span class="selector-tag">goagent</span><span class="selector-class">.zip</span> <span class="selector-tag">goagent</span>  # 打包压缩<span class="selector-tag">goagent</span>目录里的所有内容，没有`<span class="selector-tag">-r</span>`参数不能对目录进行操作。</span><br><span class="line"><span class="selector-tag">unzip</span> <span class="selector-tag">goagent</span><span class="selector-class">.zip</span>  # 解压<span class="selector-tag">goagent</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span> 文件</span><br></pre></td></tr></table></figure><h3 id="dd-用法"><a href="#dd-用法" class="headerlink" title="dd 用法"></a>dd 用法</h3><p><code>dd</code>: 可用于高效精确地复制整个磁盘分区（把ISO文件刻录到U盘），也可以用于测试硬盘或内存的读写速度。</p><p>常见用法：<br><code>if=filename</code>: 输入的文件，if 是input file 的简写<br><code>of=filename</code>: 输出的文件，of 是output file 的简写<br><code>bs=bytes</code>: 块的大小，可以用1M、1k这种格式<br><code>count=count</code>: 重复的次数</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="attribute">if</span>=xxx.iso <span class="attribute">of</span>=/dev/sdb <span class="attribute">bs</span>=1M  # 刻录ISO文件到U盘，`/dev/sdb`是U盘文件</span><br><span class="line">dd <span class="attribute">if</span>=/dev/sdc <span class="attribute">of</span>=/dev/sdd  # 将磁盘`/dev/sdc`整个备份到`/dev/sdd`</span><br><span class="line">dd <span class="attribute">if</span>=/dev/zero <span class="attribute">bs</span>=1M <span class="attribute">count</span>=1000 <span class="attribute">of</span>=testfile # 生成1Gb的文件，用于测试硬盘写入速度</span><br><span class="line">dd <span class="attribute">if</span>=testfile <span class="attribute">bs</span>=1M | dd <span class="attribute">of</span>=/dev/null # 读取1Gb的文件，用于测试硬盘读取速度</span><br></pre></td></tr></table></figure><h3 id="nano-用法"><a href="#nano-用法" class="headerlink" title="nano 用法"></a>nano 用法</h3><p><code>nano</code>: 终端里的一个编辑器，很多发现版本都用他做默认的编辑器。使用起来简单直观，底部有具体的命令用法。<br><img src="/2017/01/07/lfs101-command-line-02/nano.jpg" title="nano"></p><p>常见用法：<br><code>CTRL-G</code>: 显示帮助<br><code>CTRL-O</code>: 保存文件<br><code>CTRL-X</code>: 退出编辑器<br><code>CTRL-R</code>: 读取另外一个文件<br><code>CTRL-C</code>: 取消上一条命令</p><h3 id="gedit-用法"><a href="#gedit-用法" class="headerlink" title="gedit 用法"></a>gedit 用法</h3><p><code>gedit</code>: 跟windows的notepad 差不多，不能在终端运行，必须在图形界面才能运行。</p><h3 id="vi-vim-用法"><a href="#vi-vim-用法" class="headerlink" title="vi\vim 用法"></a>vi\vim 用法</h3><p><code>vi\vim</code>: 很多发行版本默认是包括了<code>vi</code>的，但不一定有<code>vim</code>，可能需要自己手工安装。vim 完全兼容vi的所有指令，vim的语法加亮和易用性都比vi好。特别是语法加亮功能很实用。</p><p>vi\vim 支持编辑模式和命令模式。从编辑模式切换到命令模式按<code>Esc</code>键，从命令模式切换到编辑模式一般用<code>i</code>键，还有其它键也可以。</p><p>运行命令<code>vimtutor</code>学习具体的操作方法。</p><p>常见用法：<br><code>i</code>：在当前字符前插入文本<br><code>dd</code>：删除光标行正行内容<br><code>ndd</code>：删除当前行及其后n-1行<br><code>/字符串</code>：查找操作，从当前光标所在位置开始向文件尾部查找指定字符串的内容，查找的字符串会被加亮显示<br><code>:wq</code>：在命令模式下，执行保存退出操作<br><code>:w</code>：在命令模式下，执行保存操作<br><code>:w！</code>：在命令模式下，执行强制保存操作<br><code>:q</code>：在命令模式下，执行退出vi操作<br><code>:q！</code>：在命令模式下，执行强制退出vi操作，这个经常会用到<br><code>:set number</code>：在命令模式下，用于在最左端显示行号<br><code>:set nonumber</code>：在命令模式下，用于在最左端不显示行号<br><code>:行号</code>：光标跳转到指定行的行首<br><code>SHIFT-G</code>：跳转到最后一行</p><h3 id="emacs-用法"><a href="#emacs-用法" class="headerlink" title="emacs 用法"></a>emacs 用法</h3><p><code>emacs</code>: 是一个很强大的文件编辑器，可惜很多系统没有自带这个软件，需要自己手工安装。</p><p>常见用法：<br><code>C-x C-c</code>: 退出Emacs<br><code>C-x C-f</code>: 打开一个文件，如果文件不存在，则创建一个文件<br><code>C-x C-s</code>: 保存当前buffer<br><code>C-x C-w</code>: 文件另存为</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2017/01/07/lfs101-command-line-02/vim.jpg&quot; title=&quot;vim&quot;&gt;
&lt;p&gt;题图来自&lt;a href=&quot;http://www.vim.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vim.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单介绍tar、gzip、bzip2、xz、zip、dd、nano、gedit、vi\vim、emacs的用法。&lt;/p&gt;
&lt;h3 id=&quot;tar-用法&quot;&gt;&lt;a href=&quot;#tar-用法&quot; class=&quot;headerlink&quot; title=&quot;tar 用法&quot;&gt;&lt;/a&gt;tar 用法&lt;/h3&gt;&lt;p&gt;&lt;code&gt;tar&lt;/code&gt;: 是一个打包命令而不是压缩命令，把一堆的文件或目录打成一个&lt;code&gt;.tar&lt;/code&gt;扩展名的文件（扩展名其实是随便取都可以的，但是习惯用这个），用于备份或传输。通过参数的方式可以使用gzip、bzip2对打包的文件进行压缩。&lt;/p&gt;
&lt;p&gt;常见用法：&lt;br&gt;&lt;code&gt;-c&lt;/code&gt;: 创建打包文件&lt;br&gt;&lt;code&gt;-v&lt;/code&gt;: 显示打包过程&lt;br&gt;&lt;code&gt;-f&lt;/code&gt;: 指定打包文件&lt;br&gt;&lt;code&gt;-z&lt;/code&gt;: 用gzip处理打包文件&lt;br&gt;&lt;code&gt;-j&lt;/code&gt;: 用bzip2处理打包文件&lt;br&gt;&lt;code&gt;-J&lt;/code&gt;: 用xz处理打包文件&lt;br&gt;&lt;code&gt;-t&lt;/code&gt;: 查看打包文件&lt;br&gt;&lt;code&gt;-x&lt;/code&gt;: 解压打包文件，不需要指定压缩类型，tar会自动判断&lt;br&gt;&lt;figure class=&quot;highlight tap&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar -cvf goagent.tar goagent  &lt;span class=&quot;comment&quot;&gt;# 对goanget 目录进行打包，打包后的文件是goagent.tar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zcvf goagent.tar.gz goagent  &lt;span class=&quot;comment&quot;&gt;# 对goanget 目录进行打包并用gzip进行压缩，打包后的文件是goagent.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -jcvf goagent.tar.bz2 goagent  &lt;span class=&quot;comment&quot;&gt;# 对goanget 目录进行打包并用bzip2进行压缩，打包后的文件是goagent.tar.bz2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -jtvf goagent.tar.bz2  &lt;span class=&quot;comment&quot;&gt;# 查看goagent.tar.bz2打包文件里面的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -xvf goagent.tar.bz2  &lt;span class=&quot;comment&quot;&gt;# 解压goagent.tar.bz2文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wendyeq temp $ ls -al&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;total 35608&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x  &lt;span class=&quot;number&quot;&gt; 6 &lt;/span&gt;wendyeq  staff     &lt;span class=&quot;number&quot;&gt; 204 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 7 &lt;/span&gt;23:01 .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x &lt;span class=&quot;number&quot;&gt; 13 &lt;/span&gt;wendyeq  staff     &lt;span class=&quot;number&quot;&gt; 442 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 7 &lt;/span&gt;22:59 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;drwxr-xr-x@&lt;span class=&quot;number&quot;&gt; 10 &lt;/span&gt;wendyeq  staff     &lt;span class=&quot;number&quot;&gt; 340 &lt;/span&gt;12&lt;span class=&quot;number&quot;&gt; 26 &lt;/span&gt;23:36 goagent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  &lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;wendyeq  staff &lt;span class=&quot;number&quot;&gt; 7818752 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 7 &lt;/span&gt;22:59 goagent.tar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  &lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;wendyeq  staff &lt;span class=&quot;number&quot;&gt; 5241309 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 7 &lt;/span&gt;23:01 goagent.tar.bz2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-rw-r--r--  &lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;wendyeq  staff &lt;span class=&quot;number&quot;&gt; 5168639 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt; 7 &lt;/span&gt;23:00 goagent.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://wendyeq.me/tags/linux/"/>
    
      <category term="lfs101" scheme="http://wendyeq.me/tags/lfs101/"/>
    
  </entry>
  
  <entry>
    <title>lfs101-command-line-01</title>
    <link href="http://wendyeq.me/2017/01/04/lfs101-command-line-01/"/>
    <id>http://wendyeq.me/2017/01/04/lfs101-command-line-01/</id>
    <published>2017-01-03T16:10:31.000Z</published>
    <updated>2017-09-12T03:27:06.777Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/01/04/lfs101-command-line-01/commandLine.jpg" title="CommandLine"><p>题图来自网络</p><p>简单介绍df、du、ln、touch、cd、pwd、cp、mv、mkdir、rm的用法。</p><h3 id="df-用法"><a href="#df-用法" class="headerlink" title="df 用法"></a>df 用法</h3><p><code>df</code>: 列出磁盘分区的磁盘使用情况，一般是对整个系统的使用情况<br>如果有多个磁盘，要留意有没有磁盘分区满了，而不仅仅是留意<code>/</code></p><p>常见用法：<br><code>df -h</code>: 用人类易读的容量格式显示系统磁盘的使用情况<br><code>df -h /var</code>：用人类易读的容量格式显示系统磁盘<code>/var</code>挂载点的使用情况</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Test<span class="number">-1020</span> ~]# df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2        <span class="number">42</span>G  <span class="number">5.5</span>G   <span class="number">36</span>G  <span class="number">14</span>% /</span><br><span class="line">devtmpfs        <span class="number">993</span>M     <span class="number">0</span>  <span class="number">993</span>M   <span class="number">0</span>% /dev</span><br><span class="line">tmpfs          <span class="number">1001</span>M  <span class="number">160</span>K <span class="number">1001</span>M   <span class="number">1</span>% /dev/shm</span><br><span class="line">tmpfs          <span class="number">1001</span>M  <span class="number">105</span>M  <span class="number">897</span>M  <span class="number">11</span>% /run</span><br><span class="line">tmpfs          <span class="number">1001</span>M     <span class="number">0</span> <span class="number">1001</span>M   <span class="number">0</span>% /sys/fs/cgroup</span><br><span class="line">/dev/sda1       <span class="number">969</span>M  <span class="number">150</span>M  <span class="number">754</span>M  <span class="number">17</span>% /boot</span><br><span class="line">tmpfs           <span class="number">201</span>M     <span class="number">0</span>  <span class="number">201</span>M   <span class="number">0</span>% /run/user/<span class="number">0</span></span><br><span class="line">tmpfs           <span class="number">201</span>M     <span class="number">0</span>  <span class="number">201</span>M   <span class="number">0</span>% /run/user/<span class="number">42</span></span><br><span class="line">[root@Test<span class="number">-1020</span> ~]# df -h /var</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2        <span class="number">42</span>G  <span class="number">5.5</span>G   <span class="number">36</span>G  <span class="number">14</span>% /</span><br></pre></td></tr></table></figure><h3 id="du-用法"><a href="#du-用法" class="headerlink" title="du 用法"></a>du 用法</h3><p><code>du</code>: 列出文件系统的磁盘使用量，一般是对某个目录或文件的使用情况</p><p>常见用法：<br><code>du -h</code>: 用人类易读的容量格式显示当前目录的磁盘使用情况（不显示明细），<code>-h</code>表示人类可读<br><code>du -ah</code>: 用人类易读的容量格式显示当前目录的磁盘使用情况（显示明细，包括文件和子目录），<code>-a</code>表示所有文件和目录<br><code>du -hs ./*</code>: 用人类易读的容量格式显示当前目录的磁盘使用情况（显示明细，包括文件和子目录，不包括孙目录），<code>-s</code>列出总量<br><code>du -hs /*</code>: 用人类易读的容量格式显示根目录的磁盘使用情况（显示明细，包括文件和子目录，不包括孙目录）</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@Test-1020 Downloads]<span class="comment"># du -h</span></span><br><span class="line">81M     .</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># du -ah</span></span><br><span class="line">81M     <span class="string">./go1.7.4.linux-amd64.tar.gz</span></span><br><span class="line">4.0K    <span class="string">./initial-setup-ks.cfg</span></span><br><span class="line">81M     .</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># du -hs ./*</span></span><br><span class="line">81M     <span class="string">./go1.7.4.linux-amd64.tar.gz</span></span><br><span class="line">4.0K    <span class="string">./initial-setup-ks.cfg</span></span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># du -hs /*</span></span><br><span class="line">0       <span class="string">/bin</span></span><br><span class="line">147M    <span class="string">/boot</span></span><br><span class="line">160K    <span class="string">/dev</span></span><br><span class="line">38M     <span class="string">/etc</span></span><br><span class="line">4.3M    <span class="string">/home</span></span><br><span class="line">0       <span class="string">/lib</span></span><br><span class="line">0       <span class="string">/lib64</span></span><br><span class="line">0       <span class="string">/media</span></span><br><span class="line">0       <span class="string">/mnt</span></span><br><span class="line">0       <span class="string">/opt</span></span><br><span class="line">du: cannot access ‘<span class="string">/proc/25193/task/25193/fd/4</span>’: No such file or directory</span><br><span class="line">du: cannot access ‘<span class="string">/proc/25193/task/25193/fdinfo/4</span>’: No such file or directory</span><br><span class="line">du: cannot access ‘<span class="string">/proc/25193/fd/4</span>’: No such file or directory</span><br><span class="line">du: cannot access ‘<span class="string">/proc/25193/fdinfo/4</span>’: No such file or directory</span><br><span class="line">0       <span class="string">/proc</span></span><br><span class="line">114M    <span class="string">/root</span></span><br><span class="line">105M    <span class="string">/run</span></span><br><span class="line">0       <span class="string">/sbin</span></span><br><span class="line">0       <span class="string">/srv</span></span><br><span class="line">0       <span class="string">/sys</span></span><br><span class="line">12K     <span class="string">/tmp</span></span><br><span class="line">4.1G    <span class="string">/usr</span></span><br><span class="line">825M    <span class="string">/var</span></span><br></pre></td></tr></table></figure><h3 id="ln-用法"><a href="#ln-用法" class="headerlink" title="ln 用法"></a>ln 用法</h3><p><code>ln</code>: 用于在文件或文件夹之间创建链接，与window的快捷方式有点类似。链接分硬链接和符号链接，硬链接不能用于文件夹也不能跨文件系统，只能用于目录，它会创建同一份文件进行同步，需要占用磁盘空间。符号链接不占用磁盘空间，可用于文件夹和文件。默认创建的是硬链接，创建符号链接需要加参数<code>-s</code>。</p><p>常见用法：<br><code>ln 源文件 链接名</code>: 创建一个硬链接名，内容与源文件一致<br><code>ln -s 源文件 链接名</code>: 创建一个符号链接名指向源文件</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82064</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 62 </span>1月  <span class="number"> 3 </span>14:53 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ln a.txt b.txt</span></span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82068</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 74 </span>1月  <span class="number"> 3 </span>14:53 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 b.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ln -s a.txt c.txt</span></span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82068</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 86 </span>1月  <span class="number"> 3 </span>14:54 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 b.txt</span><br><span class="line">lrwxrwxrwx  <span class="number"> 1 </span>root root       <span class="number"> 5 </span>1月  <span class="number"> 3 </span>14:54 c.txt -&gt; a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br></pre></td></tr></table></figure><h3 id="cd-amp-pwd用法"><a href="#cd-amp-pwd用法" class="headerlink" title="cd &amp; pwd用法"></a>cd &amp; pwd用法</h3><p><code>cd</code>: 是指change directory，即切换目录。<br><code>pwd</code>: 是指当前路径。</p><p>常见用法<br><code>cd 路径名</code>: 切换到路径名所在目录。<br><code>cd -</code>: 切换到上一个cd 路径所在目录。即起到回退的作用。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@Test</span><span class="number">-1020</span> Downloads]<span class="meta"># pwd</span></span><br><span class="line">/root/Downloads</span><br><span class="line">[root<span class="symbol">@Test</span><span class="number">-1020</span> Downloads]<span class="meta"># cd /</span></span><br><span class="line">[root<span class="symbol">@Test</span><span class="number">-1020</span> /]<span class="meta"># pwd</span></span><br><span class="line">/</span><br><span class="line">[root<span class="symbol">@Test</span><span class="number">-1020</span> /]<span class="meta"># cd -</span></span><br><span class="line">/root/Downloads</span><br><span class="line">[root<span class="symbol">@Test</span><span class="number">-1020</span> Downloads]<span class="meta"># pwd</span></span><br><span class="line">/root/Downloads</span><br><span class="line">[root<span class="symbol">@Test</span><span class="number">-1020</span> Downloads]<span class="meta">#</span></span><br></pre></td></tr></table></figure><h3 id="touch-用法"><a href="#touch-用法" class="headerlink" title="touch 用法"></a>touch 用法</h3><p><code>touch</code>: 有两个作用，第一个是将已存在文件的时间更新为系统当前的时间，第二个是文件不存在则创建一个空文件。</p><p>常见用法：<br><code>touch filename</code>: 更新filename的时间或创建文件名是filename的空文件。</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82068</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 86 </span>1月  <span class="number"> 3 </span>14:54 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>14:41 b.txt</span><br><span class="line">lrwxrwxrwx  <span class="number"> 1 </span>root root       <span class="number"> 5 </span>1月  <span class="number"> 3 </span>14:54 c.txt -&gt; a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># touch a.txt</span></span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82068</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 86 </span>1月  <span class="number"> 3 </span>14:54 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 b.txt</span><br><span class="line">lrwxrwxrwx  <span class="number"> 1 </span>root root       <span class="number"> 5 </span>1月  <span class="number"> 3 </span>14:54 c.txt -&gt; a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># touch d.txt</span></span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82068</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 98 </span>1月  <span class="number"> 3 </span>15:07 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 b.txt</span><br><span class="line">lrwxrwxrwx  <span class="number"> 1 </span>root root       <span class="number"> 5 </span>1月  <span class="number"> 3 </span>14:54 c.txt -&gt; a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root       <span class="number"> 0 </span>1月  <span class="number"> 3 </span>15:07 d.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br></pre></td></tr></table></figure><h3 id="cp-用法"><a href="#cp-用法" class="headerlink" title="cp 用法"></a>cp 用法</h3><p><code>cp</code>: 将一个或多个文件/目录复制到指定的文件/目录。</p><p>常见用法：<br><code>cp 源文件 目标文件</code>: 将源文件复制一份到目标文件。<br><code>cp -r 源文件夹 目标文件夹</code>: 将源文件夹下的文件和子目录都复制一份到目标文件夹，需要确认。<br><code>cp -rf 源文件夹 目标文件夹</code>: 将源文件夹下的文件和子目录都复制一份到目标文件夹，不需要确认。</p><h3 id="mv-用法"><a href="#mv-用法" class="headerlink" title="mv 用法"></a>mv 用法</h3><p><code>mv</code>: 将文件或目录重命名，或者将文件/目录从一个地方移动到另一个地方。</p><p>常见用法：<br><code>mv 原文件名 目标文件名</code>: 将原文件名修改为目标文件名，目录也一样。</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82068</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 98 </span>1月  <span class="number"> 3 </span>15:07 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 b.txt</span><br><span class="line">lrwxrwxrwx  <span class="number"> 1 </span>root root       <span class="number"> 5 </span>1月  <span class="number"> 3 </span>14:54 c.txt -&gt; a.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root       <span class="number"> 0 </span>1月  <span class="number"> 3 </span>15:07 d.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 temp</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al temp</span></span><br><span class="line">total 82056</span><br><span class="line">drwxr-xr-x <span class="number"> 3 </span>root root      <span class="number"> 51 </span>1月  <span class="number"> 3 </span>11:51 .</span><br><span class="line">drwxr-xr-x.<span class="number"> 3 </span>root root      <span class="number"> 98 </span>1月  <span class="number"> 3 </span>15:07 ..</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root      <span class="number"> 39 </span>1月  <span class="number"> 3 </span>11:51 amd64</span><br><span class="line">-rw-r--r-- <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>1月  <span class="number"> 3 </span>11:50 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># mv a.txt b.txt c.txt temp</span></span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al</span></span><br><span class="line">total 82060</span><br><span class="line">drwxr-xr-x. <span class="number"> 3 </span>root root      <span class="number"> 62 </span>1月  <span class="number"> 3 </span>15:22 .</span><br><span class="line">dr-xr-x---.<span class="number"> 22 </span>root root    <span class="number"> 4096 </span>1月  <span class="number"> 3 </span>14:50 ..</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root       <span class="number"> 0 </span>1月  <span class="number"> 3 </span>15:07 d.txt</span><br><span class="line">-rw-r--r--  <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>12月 <span class="number"> 2 </span>05:54 go1.7.4.linux-amd64.tar.gz</span><br><span class="line">drwxr-xr-x  <span class="number"> 3 </span>root root      <span class="number"> 87 </span>1月  <span class="number"> 3 </span>15:22 temp</span><br><span class="line">[root@Test-1020 Downloads]<span class="comment"># ls -al temp</span></span><br><span class="line">total 82064</span><br><span class="line">drwxr-xr-x <span class="number"> 3 </span>root root      <span class="number"> 87 </span>1月  <span class="number"> 3 </span>15:22 .</span><br><span class="line">drwxr-xr-x.<span class="number"> 3 </span>root root      <span class="number"> 62 </span>1月  <span class="number"> 3 </span>15:22 ..</span><br><span class="line">drwxr-xr-x <span class="number"> 2 </span>root root      <span class="number"> 39 </span>1月  <span class="number"> 3 </span>11:51 amd64</span><br><span class="line">-rw-r--r-- <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 a.txt</span><br><span class="line">-rw-r--r-- <span class="number"> 2 </span>root root      <span class="number"> 15 </span>1月  <span class="number"> 3 </span>15:07 b.txt</span><br><span class="line">lrwxrwxrwx <span class="number"> 1 </span>root root       <span class="number"> 5 </span>1月  <span class="number"> 3 </span>14:54 c.txt -&gt; a.txt</span><br><span class="line">-rw-r--r-- <span class="number"> 1 </span>root root<span class="number"> 84021919 </span>1月  <span class="number"> 3 </span>11:50 go1.7.4.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="mkdir-用法"><a href="#mkdir-用法" class="headerlink" title="mkdir 用法"></a>mkdir 用法</h3><p><code>mkdir</code>: 创建文件夹。</p><p>常见用法：<br><code>mkdir dirname</code>: 在当前路径创建dirname的文件夹。<br><code>mkdir -p /var/log/temp/tempdir</code>: 在<code>/var/log/temp/</code>中创建tempdir文件夹，如果中间的文件夹不存在也一并创建。</p><h3 id="rm-用法"><a href="#rm-用法" class="headerlink" title="rm 用法"></a>rm 用法</h3><p><code>rm</code>: 可以删除一个文件/目录，或者删除多个文件或目录。文件一经删除就不能恢复。</p><p>常见用法：<br><code>rm filename</code>: 删除filename文件，不加参数是不能删除目录的。<br><code>rm -r dirname</code>: 删除dirname目录，<code>-r</code>是递归的意思，这种删除方式需要一个个文件确认。<br><code>rm -rf dirname</code>: 强制删除dirname目录，不需要用户确认。用这种方式需要谨慎<strong>一旦删除就找不回</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/01/04/lfs101-command-line-01/commandLine.jpg&quot; title=&quot;CommandLine&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;简单介绍df、du、ln、touch、cd、pwd、cp、mv、mkdir、rm
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wendyeq.me/tags/linux/"/>
    
      <category term="lfs101" scheme="http://wendyeq.me/tags/lfs101/"/>
    
  </entry>
  
  <entry>
    <title>LFS101x Introduction to Linux</title>
    <link href="http://wendyeq.me/2017/01/01/LFS101/"/>
    <id>http://wendyeq.me/2017/01/01/LFS101/</id>
    <published>2016-12-31T16:15:39.000Z</published>
    <updated>2017-01-03T02:38:26.640Z</updated>
    
    <content type="html"><![CDATA[<img src="/2017/01/01/LFS101/linux.jpg" title="Linux"><p>题图来自课程</p><p>终于完成第一个<a href="https://www.edx.org/" target="_blank" rel="noopener">edx</a> 课程<a href="https://www.edx.org/course/introduction-linux-linuxfoundationx-lfs101x-0" target="_blank" rel="noopener">Introduction to Linux</a> 🤓，没有做认证，Final Exam: (29/30) 97%。</p><p>说起来从接触Linux 到现在也有很多年了。第一次用Linux 应该是在08年，先是用虚拟机安装Ubuntu，后来就转为双系统，弄桌面玩特效搞开发之类的。但是无论是Ubuntu 还是后来的Fedora，对于桌面系统来说有个比较致命的缺点，就是显卡驱动不给力，无论是Nvidia 还是 ATI（后来被AMD 收了）。</p><p>为什么从Ubuntu 转到Fedora 呢？当时玩Ubuntu 的人确实比Fedora 多得多，而且中文社区也做的非常好。投入Fedora 的怀抱主要是基于3点：</p><ol><li>Ubuntu 的默认主题配色不符合我的审美观，而Fedora 我感觉更舒服一点（在升级到Gnome 3之前）。</li><li>Fedora 比Ubuntu 更激进，通常Fedora 用的内核或包都会比Ubuntu 新一点点。</li><li>Fedora 相当于Red Hat 的社区版，当时的正式服务器市场Red Hat 的市场份额比较大，选Fedora 更容易切换到正式工作中（当时就是这么天真）。</li></ol><p>后来工作了，主要是用Windows 或Mac 做开发，真正用Linux 的机会不多，也就部署的时候用用，或者是在要科学上网的时候用一下。不过Mac 很多时候跟Linux 差不多，很多命令都是通用的。</p><p>那么为什么用了这么多年的Linux 还会选择一个Introductory 级别的关于Linux 的edx 课程呢？</p><ol><li>面对一个新平台，你不确定你是否适合这个平台，或者说这个平台是否适合你，那么用最短时间去试错显然是利益最大化的选择。</li><li>人人都需要激励，那么从一个熟悉的领域入手，先尝点甜头也未尝不可，毕竟8周的课程（40到60个小时），我只用了1周的时间。</li><li>虽然很多技能很熟悉，但是你不敢说全面。因为目前的学习模式都是只学习80%最可能用到的，剩下的20%很少去了解。虽然那80%已经足以应付日常的工作，但是我们面临的难题大部分来自于20%。所以就算不深入学习那20%，但是也要了解那20%到底有什么内容，能解决什么问题，等真正遇到对于的问题知道在哪里能找到解决方法。而不是漫无目的的Google。</li><li>最近用Docker 比较多，工作需要。</li></ol><p>设计理念、系统结构、安装和界面就不写了，vi与emacs也不争论，喜欢那个用那个。只写常用的命令作为备忘，有些将会单独写文章来记录比如 BASH。</p><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ol><li>桌面环境比较喜欢LXDE 和XFCE，至于Gnome 3就呵呵咯。服务器用多了觉得有个Terminal 就够了，桌面影响不大。</li><li>必须要学会并牢记的命令是<code>man</code> 、<code>-h</code> 或者<code>--help</code>。Linux的哲学是小而美，所以会有很多的小程序和命令。每个程序和命令的用法参数都记住显然是不可能的，所以必须要学会怎么查帮助和用法。比如：<code>man -h</code>和<code>man --help</code>都是查看<code>man</code>这个命令是怎么用的。</li></ol><ul><li><code>shutdown</code>，关机命令。</li><li><code>reboot</code>，重启命令。</li><li><code>su</code>，切换用户。</li><li><code>sudo</code>，用root执行。</li></ul><!--### 命令行+ `ln`+ `cd`+ `find`+ `touch`+ `nice`+ `ps`+ `top`+ `at`+ `cron`### 文件操作+ `cp`+ `rsync`+ `tar`+ `gzip`+ `bzip2`+ `xz`+ `zip`+ `dd`### 编辑器+ `nano`+ `gedit`+ `vi`, `vim`+ `emacs`### 用户环境+ `chmod`+ `chown`+ `chgrp`### 文本操作+ `cat`+ `echo`+ `sed`+ `awk`+ `sort`+ `uniq`+ `paste`+ `join`+ `split`+ `grep`+ `tr`+ `tee`+ `wc`+ `cut`+ `less`+ `head`+ `tail`+ `strings`+ `z`### 网络+ `ip`+ `ifconfig`+ `ping`+ `wget`+ `curl`+ `ftp`+ `sftp`+ `ssh`### 打印+ `lp`,`lpr`+ `lpoptions`+ `enscript`+ `pdftk`+ `pdfinfo`+ `flpsed`+ `pdfmod`-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2017/01/01/LFS101/linux.jpg&quot; title=&quot;Linux&quot;&gt;
&lt;p&gt;题图来自课程&lt;/p&gt;
&lt;p&gt;终于完成第一个&lt;a href=&quot;https://www.edx.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;
      
    
    </summary>
    
    
      <category term="linux" scheme="http://wendyeq.me/tags/linux/"/>
    
      <category term="edx" scheme="http://wendyeq.me/tags/edx/"/>
    
      <category term="mooc" scheme="http://wendyeq.me/tags/mooc/"/>
    
  </entry>
  
  <entry>
    <title>《软技能：代码之外的生存指南》读书笔记</title>
    <link href="http://wendyeq.me/2016/12/30/soft-skills/"/>
    <id>http://wendyeq.me/2016/12/30/soft-skills/</id>
    <published>2016-12-30T12:41:55.000Z</published>
    <updated>2017-01-03T02:38:26.618Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/12/30/soft-skills/soft.jpg" title="soft"><p>题图来自网络</p><p>第一次读《软技能：代码之外的生存指南》的时候，有种惊为天人的感觉，觉得每句话都说到心坎里了。但是在第二次阅读整理笔记的时候却发现能整理为笔记的内容不多，整本书还是以实践为主。</p><p>里面的道理其实很早就知道，比如博客的重要性，2011年之前就知道了，但是能坚持下来吗？真的应了那句“知道那么多大道理,却仍然过不好一生。“</p><p>生产力提升计划是这本书里面最喜欢的内容，无论做项目还是其他，定下一个目标之后才有可能去分解任务从而达成目标。项目计划与任务分解对于一个项目的重要性，不用多说了。关键是目标怎么设定，这要问你的内心，你到底想成为怎样的人。</p><p>对于期权不太认可作者的看法（仅指香港和中国市场上交易的期权，而不是公司分配的期权），期权很多时候有种猜大小的感觉。猜对了就赢钱，猜错了就输钱。期权带有天然的杠杆，猜错了最大的风险就是把权利金都输光。如果赌性的大的全部All in 那风险将会非常大。但是如果你说用期权策略进行套利，这就不是我的能力范畴。</p><p>2017年的第一个计划就是每3天写一篇博文。<br>2017年重点关注edx 和山海经。<br>这几年坚持的比较好的也就扇贝。<br><img src="/2016/12/30/soft-skills/shanbay.jpg" title="shanbay"></p><p>《软技能：代码之外的生存指南》读书笔记思维导图（逆时针阅读）：</p><a id="more"></a><img src="/2016/12/30/soft-skills/soft-note.png" title="软技能"><p>文字版：</p><p>1 职业<br>  1.1 工作是属于公司的，而职业生涯却是属于你的<br>  1.2 如何像企业一样思考<br>  1.3 思考未来：你的目标是什么<br>    1.3.1 像做项目一样把一个大目标分解为若干小目标，大目标才有可能实现<br>  1.4 人际交往能力：远比你想象的重要<br>    1.4.1 每个人都希望自己很重要<br>    1.4.2 一旦你贬低他人，削弱他们的成就感，在某种程度上就如同切断他们的氧气补给，获得的回馈将完全是抓狂和绝望<br>    1.4.3 永远不要批评<br>    1.4.4 换位思考<br>    1.4.5 避免争吵<br>        1.4.5.1 在小事情上任何放弃立场或承认错误的机会对你而言可能没什么大不了，但对他人却可能举足轻重<br>  1.5 面试<br>    1.5.1 内推<br>    1.5.2 不准备换工作也去提前积累面试经验<br>  1.6 专业化<br>    1.6.1 在一个领域成为专家<br>  1.7 晋升<br>    1.7.1 承担责任<br>        1.7.1.1 有一个不受重视的项目，你能去负责它吗？<br>        1.7.1.2 你能帮助团队里的新人快速成长吗？<br>        1.7.1.3 你能负责文档制作流程，并保证及时更新这些文档吗？<br>        1.7.1.4 那项工作是没有人愿意去做，你愿意承担起来，并将其简化或自动化的？<br>    1.7.2 引人注目<br>        1.7.2.1 周报<br>        1.7.2.2 分享<br>    1.7.3 自学<br>    1.7.4 成为问题的解决者<br>    1.7.5 政治<br>  1.8 成为专业人士<br>    1.8.1 什么是专业人士<br>        1.8.1.1 遵守自己的原则<br>        1.8.1.2 专注于正确完成工作<br>        1.8.1.3 不惧承认自己错了，不会文过饰非<br>        1.8.1.4 持续稳定<br>        1.8.1.5 勇于承担责任<br>    1.8.2 养成良好习惯<br>    1.8.3 坚守正道<br>    1.8.4 最求品质，完善自我<br>  1.9 远程工作的生存策略<br>    1.9.1 时间管理<br>    1.9.2 自我激励<br>    1.9.3 孤独感<br>  1.10 请勿陷入对技术的狂热之中<br>    1.10.1 我们都是技术信徒<br>    1.10.2 天生一物必有用<br>    1.10.3 不拘一格<br>2 自我营销<br>  2.1 自我营销的方式<br>    2.1.1 博客<br>    2.1.2 播客<br>    2.1.3 视频<br>    2.1.4 投稿<br>    2.1.5 书籍<br>    2.1.6 代码营<br>    2.1.7 技术会议<br>  2.2 打造品牌<br>    2.2.1 明确要传达的品牌信息<br>    2.2.2 挑选细分市场<br>    2.2.3 创建品牌口号<br>    2.2.4 创建电梯内销售概要<br>    2.2.5 创建视觉符号<br>  2.3 打造博客<br>  2.4 演讲<br>  2.5 培训<br>  2.6 著书立说<br>3 学习<br>  3.1 自我教育<br>  3.2 十步学习法<br>    3.2.1 1、了解全局<br>    3.2.2 2、确定范围<br>    3.2.3 3、定义目标<br>    3.2.4 4、寻找资源<br>    3.2.5 5、创建学习计划<br>    3.2.6 6、筛选资源<br>    3.2.7 7、开始学习，浅尝则止<br>    3.2.8 8、动手操作，边玩边学<br>    3.2.9 9、全面掌握，学以致用<br>    3.2.10 10、乐为人师，融会贯通<br>  3.3 发现自己的短板，消除短板<br>4 生产力<br>  4.1 一切始于专注<br>  4.2 生产力提升计划<br>    4.2.1 季度计划<br>    4.2.2 月计划<br>    4.2.3 周计划<br>    4.2.4 日计划及执行<br>    4.2.5 与干扰做斗争<br>    4.2.6 休息和休假<br>  4.3 番茄工作法<br>  4.4 职业倦怠<br>    4.4.1 设定一个时间表并坚决执行<br>  4.5 戒掉电视<br>  4.6 形成惯例<br>    4.6.1 制作日程安排<br>  4.7 找出坏习惯，改掉<br>  4.8 养成新习惯<br>  4.9 分解任务<br>  4.10 努力工作的价值<br>  4.11 任何行动都比不采取行动好<br>5 理财<br>  5.1 怎么支配薪水<br>    5.1.1 拒绝短期思维<br>    5.1.2 资产与负债<br>  5.2 期权<br>  5.3 房地产投资<br>  5.4 退休计划<br>  5.5 财务自由<br>6 健身<br>  6.1 挑选目标<br>  6.2 设置里程碑<br>  6.3 测量进度<br>  6.4 站立办公<br>7 精神<br>  7.1 自我形象<br>  7.2 学会拥抱失败、期待失败、接受失败、并准备直面失败</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2016/12/30/soft-skills/soft.jpg&quot; title=&quot;soft&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;第一次读《软技能：代码之外的生存指南》的时候，有种惊为天人的感觉，觉得每句话都说到心坎里了。但是在第二次阅读整理笔记的时候却发现能整理为笔记的内容不多，整本书还是以实践为主。&lt;/p&gt;
&lt;p&gt;里面的道理其实很早就知道，比如博客的重要性，2011年之前就知道了，但是能坚持下来吗？真的应了那句“知道那么多大道理,却仍然过不好一生。“&lt;/p&gt;
&lt;p&gt;生产力提升计划是这本书里面最喜欢的内容，无论做项目还是其他，定下一个目标之后才有可能去分解任务从而达成目标。项目计划与任务分解对于一个项目的重要性，不用多说了。关键是目标怎么设定，这要问你的内心，你到底想成为怎样的人。&lt;/p&gt;
&lt;p&gt;对于期权不太认可作者的看法（仅指香港和中国市场上交易的期权，而不是公司分配的期权），期权很多时候有种猜大小的感觉。猜对了就赢钱，猜错了就输钱。期权带有天然的杠杆，猜错了最大的风险就是把权利金都输光。如果赌性的大的全部All in 那风险将会非常大。但是如果你说用期权策略进行套利，这就不是我的能力范畴。&lt;/p&gt;
&lt;p&gt;2017年的第一个计划就是每3天写一篇博文。&lt;br&gt;2017年重点关注edx 和山海经。&lt;br&gt;这几年坚持的比较好的也就扇贝。&lt;br&gt;&lt;img src=&quot;/2016/12/30/soft-skills/shanbay.jpg&quot; title=&quot;shanbay&quot;&gt;&lt;/p&gt;
&lt;p&gt;《软技能：代码之外的生存指南》读书笔记思维导图（逆时针阅读）：&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://wendyeq.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>游戏开发物语</title>
    <link href="http://wendyeq.me/2016/12/19/kairo-game/"/>
    <id>http://wendyeq.me/2016/12/19/kairo-game/</id>
    <published>2016-12-19T11:37:32.000Z</published>
    <updated>2017-01-03T02:38:26.604Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/12/19/kairo-game/game.jpeg" title="game"><p>题图来自Apple Store</p><p>第一次接触开罗这款游戏是在几年前，那时候还是用Android 玩的汉化版本。出差在酒店中，一玩就玩到凌晨3点钟，真疯狂!<br>前几天在逛Apple Store 收费榜的时候，看到了游戏开发物语这款游戏进入了收费榜，勾起了之前的记忆，所以就花6块钱下载下来（<a href="https://itunes.apple.com/cn/app/id396085661?mt=8" target="_blank" rel="noopener">下载地址</a>）。在短时间内玩了两次结局，游戏时间20年为一次结局，第二次的时候我把游戏速度调快了一些。</p><p>游戏开发物语是一款节奏很快的模拟养成类游戏。玩家扮演游戏开发公司的社长运营一家游戏开发公司。作为游戏开发公司的社长需要人员管理、开发管理、广告宣传等。</p><h3 id="人员管理"><a href="#人员管理" class="headerlink" title="人员管理"></a>人员管理</h3><p>在公司刚开始发展的时候，启动资金有限，只能通过熟人介绍这种花费少的方式去招人。当然也只能选一些价格便宜的人。但是对于选择什么样的人开罗公司设计了一个有意思的指标就是<strong>体力</strong>，每次选择体力高的人员就是最优的选择，体力高表示潜力大，当前的能力值高低不是选择的最主要标准。因为每次培训和日常的爆发都需要体力，体力越高的人能进行的培训的次数就越多。所以<strong>体力才是我们的核心竞争力</strong>。<br>在游戏的职业系统中有程序员、剧本作家、设计师、音响制作师、总监、制作人、硬件工程师、超级黑客，层层递进，可以通过转职教科书这种道具进行职业转换。其中硬件工程师要前面的所有职业都满5级才能转，而且硬件工程师是开发主机的必要条件。</p><h3 id="开发管理"><a href="#开发管理" class="headerlink" title="开发管理"></a>开发管理</h3><p>刚开始不够钱独立开发游戏的时候，只能接一些外包来做，毕竟生存下来才是最主要的。当公司发展起来之后又会请一些外包回来做外包更擅长的东西，让整个游戏的期待值更高。<br>一直的目标都是存钱和培养硬件工程师，将来开发主机。主机的起点开始就很高，所以一出的就是顶配，拿下最大的市场份额。而且有时候游戏的销量会远大于主机的销量，说明了有些是买了几套的，一套用来玩，其他的用来收藏。<br>当公司发展起来后会带动题材，一些人气中低的题材的好游戏也可以卖的很好。<br>一个人连续做一样工作的时候质量会变差，所以那些工作要轮着来做，也就是同样类型的工作需要储备2个人。</p><h3 id="广告宣传"><a href="#广告宣传" class="headerlink" title="广告宣传"></a>广告宣传</h3><p>要经常宣传才能有粉丝，如果一段时间不发新游戏则粉丝数回下降，特别是每次开发主机的时候。</p><p>以上都是游戏。<br>PS: 这款游戏很容易上瘾，不推荐玩!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2016/12/19/kairo-game/game.jpeg&quot; title=&quot;game&quot;&gt;
&lt;p&gt;题图来自Apple Store&lt;/p&gt;
&lt;p&gt;第一次接触开罗这款游戏是在几年前，那时候还是用Android 玩的汉化版本。出差在酒店中，一玩就玩到凌晨3点钟，
      
    
    </summary>
    
    
      <category term="game" scheme="http://wendyeq.me/tags/game/"/>
    
      <category term="心得" scheme="http://wendyeq.me/tags/%E5%BF%83%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>intellij idea Web 项目配置tomcat</title>
    <link href="http://wendyeq.me/2016/12/14/intellij-idea-configuration-tomcat-server/"/>
    <id>http://wendyeq.me/2016/12/14/intellij-idea-configuration-tomcat-server/</id>
    <published>2016-12-14T13:02:18.000Z</published>
    <updated>2017-01-03T02:38:26.501Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/12/14/intellij-idea-configuration-tomcat-server/idea.jpg" title="ieda"><p>题图来自网络</p><p>有个Java Web项目，之前一直都是使用Eclipse 开发的，部署到tomcat上。最近对indellij idea比较感兴趣，所有像把这个项目转为用想把这个项目转为indellij idea进行开发。</p><a id="more"></a><p>1、项目结构如下<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step1.jpg" title="step1"></p><p>2、把项目从Gitlab签出<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step2.jpg" title="step2"></p><p>3、选择项目签出的位置<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step3.jpg" title="step3"></p><p>4、签出完毕后，点击File -&gt; Project Structure 进行项目配置<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step4.jpg" title="step4"></p><p>5、Project的基本信息设置，SDK、编译级别还有编译文件输出目录<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step5.jpg" title="step5"></p><p>6、Modules设置，在Sources页签中选择src目录，然后点击Mask as Sources的那个蓝色目录，设置source fodels。否则Facets 中中Source Roots 将会为空。<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step6.jpg" title="step6"></p><p>7、在Libraries 中新增lib，选择<code>WebContent\WEB-INF\lib</code>目录。由于项目编译依赖tomcat lib，所以也要添加tomcat-lib。<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step7.jpg" title="step7"></p><p>8、Artifacts 中点击新增，选择Web Application:exploded -&gt; from modules。最后在output Layout页签的右边框Available Elements的内容都移动到左边框。<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step8.jpg" title="step8"></p><p>9、检查Facets页签的配置是否正确<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step9.jpg" title="step9"></p><p>10、点击Run -&gt; Edit Configurations，然后点击左上角的添加按钮，选择tomcat server -&gt; local 进行新增。在Server页签中配置Application server为本地的tomcat。<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step10.jpg" title="step10"></p><p>11、点击Depoyment 页签，然后点击中间的添加按钮把之前配置好的artifacts添加，默认的路径的映射路径是不带项目名称的，所以是直接通过<code>127.0.0.1:8080</code>访问。<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step11.jpg" title="step11"></p><p>12、如果带项目名称访问的话，则需在Application context中配置访问的项目名。访问路径是<code>127.0.0.1:8080/Pro</code>.<br><img src="/2016/12/14/intellij-idea-configuration-tomcat-server/step12.jpg" title="step12"></p><p>配置完毕。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2016/12/14/intellij-idea-configuration-tomcat-server/idea.jpg&quot; title=&quot;ieda&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;有个Java Web项目，之前一直都是使用Eclipse 开发的，部署到tomcat上。最近对indellij idea比较感兴趣，所有像把这个项目转为用想把这个项目转为indellij idea进行开发。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://wendyeq.me/tags/java/"/>
    
      <category term="web" scheme="http://wendyeq.me/tags/web/"/>
    
      <category term="intellij" scheme="http://wendyeq.me/tags/intellij/"/>
    
  </entry>
  
  <entry>
    <title>用Ant 构建Java Web 项目</title>
    <link href="http://wendyeq.me/2016/12/03/use-ant-build-java-web-project/"/>
    <id>http://wendyeq.me/2016/12/03/use-ant-build-java-web-project/</id>
    <published>2016-12-03T14:10:16.000Z</published>
    <updated>2017-01-03T02:38:26.491Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/12/03/use-ant-build-java-web-project/ant.png" title="apache ant"><p>题图来自网络</p><p>目前Java 世界的构建工具主要有3个，按流行度分别是Gradle、Maven、<a href="http://ant.apache.org/" target="_blank" rel="noopener">Ant</a>，其中Ant 的历史最悠久。Gradle 的流行得益于Android的普及，Android Studio 开发的Android 项目默认使用Gradle构建，并且Gradle 可以使用Maven 的仓库。</p><p>由于一些不可描述的原因，之前的一个Java Web项目只是依赖于手工IDE进行打包，没有使用构建工具。项目的目录结构也不太合适改造为Gradle 或者Maven 项目。经过调研，最后只好使用Ant进行打包构建。</p><p>使用Ant 构建，希望能达到的目的：自动编译、运行Junit 单元测试、打成war 包。</p><p>项目的目录结构如下:<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">    com</span><br><span class="line">    resources</span><br><span class="line">WebContent</span><br><span class="line">    WEB-INF</span><br><span class="line">        <span class="class"><span class="keyword">lib</span></span></span><br><span class="line">    html</span><br><span class="line">    ...</span><br><span class="line">tomcat-<span class="class"><span class="keyword">lib</span></span></span><br><span class="line">build.xml</span><br></pre></td></tr></table></figure></p><p>单元测试没有与源代码分开，都放到com下统一采用XXXTest.java 命名。<br>依赖的jar包都放在WebContent/WEB-INF/lib下，但是由于部分代码依赖tomcat的库，所以把tomcat-lib也放进来方便打包和Jenkins 集成测试。如果不是为了方便之后的Jenkins 集成测试，tomcat-lib 是可以不加进来的。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"tomcat.lib.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;basedir&#125;/tomcat-lib"</span> <span class="attr">description</span>=<span class="string">"tomcat jar包"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>用下面的代码替换，系统必须有CATALINA_HOME 环境变量指向tomcat 的安装目录。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">environment</span>=<span class="string">"SystemVariable"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"tomcat.lib.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;SystemVariable.CATALINA_HOME&#125;/lib"</span> <span class="attr">description</span>=<span class="string">"tomcat jar包"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>在javac 任务中指定编码有两种方式，一种是直接javac 后面加属性<code>encoding=&quot;utf8&quot;</code>,另一种是用compilerarg 标签，采用compilerarg 是因为方便后面添加其他javac 的编译参数。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;compilerarg <span class="attribute">line</span>=<span class="string">"-encoding utf-8"</span>/&gt;</span><br></pre></td></tr></table></figure></p><p>在junt 任务中需要指定jvm 参数<code>-Dfile.encoding=UTF-8</code> 要不然测试生成的log文件内容会有乱码，虽然测试的log一般都不看🙈<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 修改输出的格式为UTF-8，要不然log日志会乱码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jvmarg</span> <span class="attr">value</span>=<span class="string">"-Dfile.encoding=UTF-8"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><p>编写好build.xml 文件之后就可以用IDE 或者命令行执行Ant 任务。在命令行中cd 到工程根目录，然后执行ant（前提是下载好Ant，解压并把ant 命令加到系统变量中），就会执行到dist任务，打好war包。若是执行<code>ant test</code>，则在执行test 任务前会先执行依赖的init 和compile 任务。</p><p>后续待完善的是通过Jenkins 集成远程部署到tomcat 或者直接打包到docker镜像。</p><p>完整的build.xml 文件<br><a id="more"></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"不可描述"</span> <span class="attr">default</span>=<span class="string">"dist"</span> <span class="attr">basedir</span>=<span class="string">"."</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"build.dir"</span> <span class="attr">value</span>=<span class="string">"build"</span> <span class="attr">description</span>=<span class="string">"输出目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"build.web.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;build.dir&#125;/WEB-INF"</span> <span class="attr">description</span>=<span class="string">"web配置输出目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"build.web.class.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;build.web.dir&#125;/classes"</span> <span class="attr">description</span>=<span class="string">"web类输出目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"build.web.lib.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;build.web.dir&#125;/lib"</span> <span class="attr">description</span>=<span class="string">"web引用jar输出目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"src.dir"</span> <span class="attr">value</span>=<span class="string">"src"</span> <span class="attr">description</span>=<span class="string">"源代码目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"webRoot.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;basedir&#125;/WebContent"</span> <span class="attr">description</span>=<span class="string">"web根目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"lib.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;webRoot.dir&#125;/WEB-INF/lib"</span> <span class="attr">description</span>=<span class="string">"web根目录lib"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 不加入tomcat-lib 依赖系统tomcat，就采用这种方式</span></span><br><span class="line"><span class="comment">    &lt;property environment="SystemVariable" /&gt;</span></span><br><span class="line"><span class="comment">    &lt;property name="tomcat.lib.dir" value="$&#123;SystemVariable.CATALINA_HOME&#125;/lib" description="tomcat jar包"/&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"tomcat.lib.dir"</span> <span class="attr">value</span>=<span class="string">"$&#123;basedir&#125;/tomcat-lib"</span> <span class="attr">description</span>=<span class="string">"tomcat jar包"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"report.dir"</span> <span class="attr">value</span>=<span class="string">"report"</span> <span class="attr">description</span>=<span class="string">"测试报告目录"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"encoding"</span> <span class="attr">value</span>=<span class="string">"utf-8"</span> <span class="attr">description</span>=<span class="string">"文件编码"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">"project.classpath"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;lib.dir&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"*.jar"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;tomcat.lib.dir&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"*.jar"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"init"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">delete</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.dir&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.dir&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.web.dir&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.web.class.dir&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.web.lib.dir&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">delete</span> <span class="attr">dir</span>=<span class="string">"$&#123;report.dir&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;report.dir&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"compile"</span> <span class="attr">depends</span>=<span class="string">"init"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javac</span> <span class="attr">destdir</span>=<span class="string">"$&#123;build.web.class.dir&#125;"</span> <span class="attr">srcdir</span>=<span class="string">"$&#123;src.dir&#125;"</span> <span class="attr">source</span>=<span class="string">"1.8"</span> <span class="attr">debug</span>=<span class="string">"on"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">includeantruntime</span>=<span class="string">"false"</span> <span class="attr">deprecation</span>=<span class="string">"false"</span> <span class="attr">optimize</span>=<span class="string">"false"</span> <span class="attr">failonerror</span>=<span class="string">"true"</span>  &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">compilerarg</span> <span class="attr">line</span>=<span class="string">"-encoding utf-8"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">classpath</span> <span class="attr">refid</span>=<span class="string">"project.classpath"</span>&gt;</span><span class="tag">&lt;/<span class="name">classpath</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javac</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">copy</span> <span class="attr">todir</span>=<span class="string">"$&#123;build.web.class.dir&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;src.dir&#125;"</span> <span class="attr">excludes</span>=<span class="string">"**/*.java"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">copy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">copy</span> <span class="attr">todir</span>=<span class="string">"$&#123;build.dir&#125;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;webRoot.dir&#125;"</span> <span class="attr">excludes</span>=<span class="string">"**/*.class"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">copy</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span> <span class="attr">depends</span>=<span class="string">"init,compile"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">junit</span> <span class="attr">printsummary</span>=<span class="string">"true"</span> <span class="attr">haltonerror</span>=<span class="string">"true"</span> <span class="attr">haltonfailure</span>=<span class="string">"true"</span> <span class="attr">fork</span>=<span class="string">"yes"</span> <span class="attr">forkmode</span>=<span class="string">"perBatch"</span> <span class="attr">timeout</span>=<span class="string">"100000"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">classpath</span> &gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;lib.dir&#125;"</span> <span class="attr">includes</span>=<span class="string">"*.jar"</span> /&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;tomcat.lib.dir&#125;"</span> <span class="attr">includes</span>=<span class="string">"*.jar"</span>/&gt;</span></span><br><span class="line">             <span class="comment">&lt;!-- 必须使用pathelement，不能使用fileset --&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">path</span>=<span class="string">"$&#123;build.web.class.dir&#125;"</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">classpath</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 修改输出的格式为UTF-8，要不然log日志会乱码 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">jvmarg</span> <span class="attr">value</span>=<span class="string">"-Dfile.encoding=UTF-8"</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">formatter</span> <span class="attr">type</span>=<span class="string">"xml"</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">batchtest</span> <span class="attr">todir</span>=<span class="string">"$&#123;report.dir&#125;"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.web.class.dir&#125;"</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!-- 只指向Test 结尾的文件--&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*Test.*"</span>/&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">batchtest</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">junit</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">junitreport</span> <span class="attr">todir</span>=<span class="string">"$&#123;report.dir&#125;"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;report.dir&#125;"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"TEST-*.xml"</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">report</span> <span class="attr">format</span>=<span class="string">"frames"</span> <span class="attr">todir</span>=<span class="string">"$&#123;report.dir&#125;"</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">junitreport</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"dist"</span> <span class="attr">depends</span>=<span class="string">"init,compile,test"</span> <span class="attr">description</span>=<span class="string">"将工程打成war包"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">war</span> <span class="attr">destfile</span>=<span class="string">"$&#123;build.dir&#125;/$&#123;ant.project.name&#125;.war"</span> <span class="attr">basedir</span>=<span class="string">"$&#123;build.dir&#125;"</span> <span class="attr">webxml</span>=<span class="string">"$&#123;build.web.dir&#125;/web.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2016/12/03/use-ant-build-java-web-project/ant.png&quot; title=&quot;apache ant&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;目前Java 世界的构建工具主要有3个，按流行度分别是Gradle、Maven、&lt;a href=&quot;http://ant.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ant&lt;/a&gt;，其中Ant 的历史最悠久。Gradle 的流行得益于Android的普及，Android Studio 开发的Android 项目默认使用Gradle构建，并且Gradle 可以使用Maven 的仓库。&lt;/p&gt;
&lt;p&gt;由于一些不可描述的原因，之前的一个Java Web项目只是依赖于手工IDE进行打包，没有使用构建工具。项目的目录结构也不太合适改造为Gradle 或者Maven 项目。经过调研，最后只好使用Ant进行打包构建。&lt;/p&gt;
&lt;p&gt;使用Ant 构建，希望能达到的目的：自动编译、运行Junit 单元测试、打成war 包。&lt;/p&gt;
&lt;p&gt;项目的目录结构如下:&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WebContent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WEB-INF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tomcat-&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;build.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;单元测试没有与源代码分开，都放到com下统一采用XXXTest.java 命名。&lt;br&gt;依赖的jar包都放在WebContent/WEB-INF/lib下，但是由于部分代码依赖tomcat的库，所以把tomcat-lib也放进来方便打包和Jenkins 集成测试。如果不是为了方便之后的Jenkins 集成测试，tomcat-lib 是可以不加进来的。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tomcat.lib.dir&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;basedir&amp;#125;/tomcat-lib&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;description&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tomcat jar包&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用下面的代码替换，系统必须有CATALINA_HOME 环境变量指向tomcat 的安装目录。&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;environment&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;SystemVariable&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tomcat.lib.dir&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;$&amp;#123;SystemVariable.CATALINA_HOME&amp;#125;/lib&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;description&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tomcat jar包&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在javac 任务中指定编码有两种方式，一种是直接javac 后面加属性&lt;code&gt;encoding=&amp;quot;utf8&amp;quot;&lt;/code&gt;,另一种是用compilerarg 标签，采用compilerarg 是因为方便后面添加其他javac 的编译参数。&lt;br&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;compilerarg &lt;span class=&quot;attribute&quot;&gt;line&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;-encoding utf-8&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在junt 任务中需要指定jvm 参数&lt;code&gt;-Dfile.encoding=UTF-8&lt;/code&gt; 要不然测试生成的log文件内容会有乱码，虽然测试的log一般都不看🙈&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 修改输出的格式为UTF-8，要不然log日志会乱码 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;jvmarg&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;-Dfile.encoding=UTF-8&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编写好build.xml 文件之后就可以用IDE 或者命令行执行Ant 任务。在命令行中cd 到工程根目录，然后执行ant（前提是下载好Ant，解压并把ant 命令加到系统变量中），就会执行到dist任务，打好war包。若是执行&lt;code&gt;ant test&lt;/code&gt;，则在执行test 任务前会先执行依赖的init 和compile 任务。&lt;/p&gt;
&lt;p&gt;后续待完善的是通过Jenkins 集成远程部署到tomcat 或者直接打包到docker镜像。&lt;/p&gt;
&lt;p&gt;完整的build.xml 文件&lt;br&gt;
    
    </summary>
    
    
      <category term="ant" scheme="http://wendyeq.me/tags/ant/"/>
    
      <category term="java" scheme="http://wendyeq.me/tags/java/"/>
    
      <category term="构建" scheme="http://wendyeq.me/tags/%E6%9E%84%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>《智能时代：大数据与智能革命重新定义未来》读书笔记</title>
    <link href="http://wendyeq.me/2016/11/27/ai/"/>
    <id>http://wendyeq.me/2016/11/27/ai/</id>
    <published>2016-11-27T14:55:56.000Z</published>
    <updated>2017-01-03T02:38:26.472Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/11/27/ai/ai.jpg" title="ai"><p>题图来自网络</p><p>吴军写的书已经看过好几本，《浪潮之巅》、《数学之美》、《文明之光》都已经看完。《浪潮之巅》的创始人基因论印象深刻，吴军颇有预言家的潜质，比如雅虎卖身给Verizon。《数学之美》、《文明之光》是从广州图书馆借来看的，花费的时间成本不比买书便宜，但是为什么不直接买书呢？由于是租房，每次买大件的东西都会考虑一下搬家的事情，而且本人是Kindle 用户，现在买书都优先考虑买电子版，方便携带，随时随地阅读，但是吴军的书都不出电子版😒😒😒<br>《智能时代》是趁着双十一前，京东图书打折的时候买的，刚开始还不知道出了这本书。</p><p>这其实是本科普书，不过上架建议居然是经济读物😯。书的内容写的很浅显，读起来通顺流畅，保持了他一贯的写作风格。其实他的书除了《数学之美》比较深奥，其他几本都比较容易读懂。书里面关于发展历史的一些内容和观点在前面几本书都有体现。</p><p>在《数学之美》中已经发现他对香农和信息论的评价很高，在《智能时代》强化了这一观点。可怜我一个信息工程的，无论是在学校时代还是工作几年后，对信息论的理解和认识与他还是相差甚远。</p><p>书里面的一句话很喜欢“隐私就像自由，只有当人们失去它的时候，才知道它的可贵”。其实大家对隐私的保护还是很脆弱，便利与隐私通常更倾向于便利。大公司一直诱惑你，要你提供隐私来做用户画像，方便精准推送。印象很深刻的是：有一年在过年前支付宝更新了一个版本，必须上传头像才能继续使用支付宝，其实我一直认为这是个bug来的，但是等了好久都没有修复，最后我就把支付宝卸载了，过了一年多之后才再次使用，这次不上传头像也可以使用。其实我这么倔强是有两个原因的，第一个是我不想一家公司轻易能拿到我的所有信息做用户画像，做数据分析。比较理想的情况是支付宝有部分信息，微信有部分信息，然后他们加起来的数据才具备完备性，当然这只是一厢情愿而已。第二个原因是支付宝不是购物的必要条件，我一直把支付宝定位为支付工具（当然他一直不甘于只做支付工具），所以我可能不是他的目标用户。</p><p>其实我是个矛盾体，不太喜欢精准推送，我更喜欢主动挖掘。有一天我突然发现，我已经training到豆瓣私人电台播放的歌90%都是我喜欢的，然后我就不用豆瓣FM。</p><p>《智能时代：大数据与智能革命重新定义未来》读书笔记思维导图（逆时针阅读）：</p><a id="more"></a><img src="/2016/11/27/ai/ai-note.png" title="智能时代"><p>文字版：<br>1 数据，人类建造文明的基石<br>  1.1 信息是关于世界、人和事的描述，数据的作用是承载信息，不是所有的数据都承载了有意义的信息<br>  1.2 数据-&gt;信息-&gt;知识，对数据和信息进行处理后就可以获得知识<br>  1.3 得到和使用数据的能力，是衡量文明发展水平的标准之一<br>  1.4 获取数据&gt;&gt;分析数据&gt;&gt;建立模型&gt;&gt;预测未知<br>  1.5 数据与想要获得的信息之间的联系通常是间接的，相关性是让数据发挥作用的魔棒<br>  1.6 数据驱动方法：只要数据量足够，就可以用若干个简单的模型取代一个复杂的模型<br>  1.7 相关性、统计学、数学模型<br>2 大数据和机器智能<br>  2.1 图灵测试<br>    2.1.1 让一台机器和一个人坐在幕后，让一个裁判同时与幕后的人和机器进行交流，如果这个裁判无法判断自己交流的对象是人还是机器，就说明这台机器有了和人同等的智能<br>  2.2 人工智能<br>    2.2.1 泛指机器智能，也就是任何可以让计算机通过图灵测试的方法<br>    2.2.2 20世纪五六十年代特定的研究机器智能的方法，机器要像人一样思考才能获得智能<br>  2.3 贾里尼克：人的大脑是一个信息源，从思考到找到合适的语句，再通过发音说出来，是一个编码的过程，讲过媒介传播到听众的耳朵里，是经过了一个长长的信道传播的问题，最后听话人把它听懂，是一个解码的过程<br>  2.4 大数据：体量大、多维度、完备性<br>  2.5 思维方式的改变：变智能问题为数据问题<br>3 思维的革命<br>  3.1 在无法确定因果关系时，数据为我们提供了解决问题的新方法，数据中所包含的信息可以帮助我们消除不确定性，而数据之间的相关性在某种程度上可以取代原来的因果关系，帮助我们得到我们想知道的答案，这就是大数据思维的核心<br>  3.2 工业革命，机械思维的结果<br>    3.2.1 确定性和因果关系<br>  3.3 世界的不确定性：影响世界的变量非常多，不确定性是宇宙的一个特性<br>  3.4 熵，一种新的世界观<br>    3.4.1 用熵来描述一个信息系统的不确定性，信息量的度量就等于是不确定性的多少<br>    3.4.2 香农第一定律：对于信源发出的所有信息设计一种编码，那么编码的平均长度一定大于该信源的信息熵，但同时香农还指出，一定存在一种编码方式，使得编码的平均长度无限接近于它的信息熵<br>    3.4.3 香农第二定律：信息的传播速率不可能超过信道的容量<br>    3.4.4 最大熵原理：当我们要对未知的事件寻找一个概率模型时，这个模型应当满足我们所有已经看到的数据，但是对未知的情况不要做任何主观假设。<br>  3.5 大数据的科学基础是信息论，它的本质就是利用信息消除不确定性<br>  3.6 从因果关系到强关系<br>    3.6.1 根据大量数据的统计结果，可以找到一些我们不知道原因的相关性<br>  3.7 在新的时代一定需要新的方法论，也一定会产生新的方法论<br>4 大数据与商业<br>  4.1 大数据找规律<br>    4.1.1 用电与毒品种植<br>    4.1.2 营业面积与纳税<br>  4.2 相关性、时效性和个性化的重要<br>  4.3 大数据在商业活动中从细节到整体再从整体到细节双向流动<br>  4.4 用大数据训练模型优化穷举法<br>  4.5 新技术+原有产业=新产业<br>  4.6 技术革命导致商业模式的变化，尤其是新的商业模式的诞生<br>  4.7 生产越来越过剩，需求拉动经济增长的模式变得不可逆转<br>  4.8 商业模式的变化既有继承性，又有创新性<br>5 大数据和智能革命的计算挑战<br>  5.1 数据的产生、存储、传输和处理<br>  5.2 GFS、MapReduce、Hadoop、Dremel<br>  5.3 数据挖掘，机器智能的关键<br>  5.4 保护隐私<br>    5.4.1 从收集信息的一开始就对数据进行一些预处理<br>    5.4.2 双向监视，当使用这看计算机时，计算机也在盯着使用者看<br>6 未来智能化产业<br>  6.1 未来的农业<br>  6.2 未来的体育<br>    6.2.1 金州勇士<br>  6.3 未来的制造业<br>  6.4 未来的医疗<br>    6.4.1 降低医疗成本<br>    6.4.2 解决医疗资源短缺问题<br>    6.4.3 制药业的革命<br>  6.5 未来的律师业<br>  6.6 未来的记者和编辑<br>7 智能革命和未来社会<br>  7.1 在历次技术革命中，一个人、一家企业，甚至一个国家，可以选择的道路只有两条：要么加入浪潮，成为前2%的人，要么观望徘徊，被淘汰<br>  7.2 智能化社会，智能交通，智慧城市<br>  7.3 生活的更加方便，同时社会资源的利用率极大地提高<br>  7.4 区块链<br>  7.5 无隐私的社会<br>    7.5.1 隐私就像自由，只有当人们失去它的时候，才知道它的可贵<br>  7.6 当全社会各行各业的从业人员因为机器智能而减少时，全世界几十亿劳动力怎么办？<br>  7.7 越来越多的事情人类将做不过机器<br>  7.8 这是最好的时代，也是最坏的时代</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2016/11/27/ai/ai.jpg&quot; title=&quot;ai&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;吴军写的书已经看过好几本，《浪潮之巅》、《数学之美》、《文明之光》都已经看完。《浪潮之巅》的创始人基因论印象深刻，吴军颇有预言家的潜质，比如雅虎卖身给Verizon。《数学之美》、《文明之光》是从广州图书馆借来看的，花费的时间成本不比买书便宜，但是为什么不直接买书呢？由于是租房，每次买大件的东西都会考虑一下搬家的事情，而且本人是Kindle 用户，现在买书都优先考虑买电子版，方便携带，随时随地阅读，但是吴军的书都不出电子版😒😒😒&lt;br&gt;《智能时代》是趁着双十一前，京东图书打折的时候买的，刚开始还不知道出了这本书。&lt;/p&gt;
&lt;p&gt;这其实是本科普书，不过上架建议居然是经济读物😯。书的内容写的很浅显，读起来通顺流畅，保持了他一贯的写作风格。其实他的书除了《数学之美》比较深奥，其他几本都比较容易读懂。书里面关于发展历史的一些内容和观点在前面几本书都有体现。&lt;/p&gt;
&lt;p&gt;在《数学之美》中已经发现他对香农和信息论的评价很高，在《智能时代》强化了这一观点。可怜我一个信息工程的，无论是在学校时代还是工作几年后，对信息论的理解和认识与他还是相差甚远。&lt;/p&gt;
&lt;p&gt;书里面的一句话很喜欢“隐私就像自由，只有当人们失去它的时候，才知道它的可贵”。其实大家对隐私的保护还是很脆弱，便利与隐私通常更倾向于便利。大公司一直诱惑你，要你提供隐私来做用户画像，方便精准推送。印象很深刻的是：有一年在过年前支付宝更新了一个版本，必须上传头像才能继续使用支付宝，其实我一直认为这是个bug来的，但是等了好久都没有修复，最后我就把支付宝卸载了，过了一年多之后才再次使用，这次不上传头像也可以使用。其实我这么倔强是有两个原因的，第一个是我不想一家公司轻易能拿到我的所有信息做用户画像，做数据分析。比较理想的情况是支付宝有部分信息，微信有部分信息，然后他们加起来的数据才具备完备性，当然这只是一厢情愿而已。第二个原因是支付宝不是购物的必要条件，我一直把支付宝定位为支付工具（当然他一直不甘于只做支付工具），所以我可能不是他的目标用户。&lt;/p&gt;
&lt;p&gt;其实我是个矛盾体，不太喜欢精准推送，我更喜欢主动挖掘。有一天我突然发现，我已经training到豆瓣私人电台播放的歌90%都是我喜欢的，然后我就不用豆瓣FM。&lt;/p&gt;
&lt;p&gt;《智能时代：大数据与智能革命重新定义未来》读书笔记思维导图（逆时针阅读）：&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://wendyeq.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ai" scheme="http://wendyeq.me/tags/ai/"/>
    
  </entry>
  
  <entry>
    <title>升级MySQL 报错</title>
    <link href="http://wendyeq.me/2016/11/26/mysql-upgrade-error/"/>
    <id>http://wendyeq.me/2016/11/26/mysql-upgrade-error/</id>
    <published>2016-11-26T15:31:30.000Z</published>
    <updated>2017-01-03T02:38:26.451Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/11/26/mysql-upgrade-error/mysql.jpg" title="mysql"><p>题图来自网络</p><p>今天把测试系统的MySQL镜像版本5.6.34替换为5.7.16，也就是把MySQL 5.6.34 升级到5.7.16。<br>升级过程：</p><ol><li>把MySQL 5.6.34的容器停了，<code>docker stop mysql</code>。</li><li>启动新的MySQL:5.7.16，密码没改，数据库文件用-v 指向与5.6.34的同一路径。</li><li>启动完发现数据库可以连接，但是select 数据的时候有问题，查看启动日志发现后文中的错误。错误的原因是升级MySQL，默认数据库的表结构发生变化。</li><li>进入容器 <code>docker exec -it mysql bash</code></li><li>在容器内执行 <code>/usr/bin/mysql_upgrade -u root -p</code>，修复完毕。</li></ol><blockquote><p>2016-11-25T06:35:16.576568Z 0 [ERROR] Incorrect definition of table performance_schema.events_waits_current: expected column ‘NESTING_EVENT_TYPE’ at position 15 to have type enum(‘TRANSACTION’,’STATEMENT’,’STAGE’,’WAIT’, found type enum(‘STATEMENT’,’STAGE’,’WAIT’).<br>2016-11-25T06:35:16.576651Z 0 [ERROR] Incorrect definition of table performance_schema.events_waits_history: expected column ‘NESTING_EVENT_TYPE’ at position 15 to have type enum(‘TRANSACTION’,’STATEMENT’,’STAGE’,’WAIT’, found type enum(‘STATEMENT’,’STAGE’,’WAIT’).<br>2016-11-25T06:35:16.576728Z 0 [ERROR] Incorrect definition of table performance_schema.events_waits_history_long: expected column ‘NESTING_EVENT_TYPE’ at position 15 to have type enum(‘TRANSACTION’,’STATEMENT’,’STAGE’,’WAIT’, found type enum(‘STATEMENT’,’STAGE’,’WAIT’).<br>2016-11-25T06:35:16.577004Z 0 [ERROR] Incorrect definition of table performance_schema.events_waits_summary_by_user_by_event_name: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.577078Z 0 [ERROR] Incorrect definition of table performance_schema.events_waits_summary_by_account_by_event_name: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.577614Z 0 [ERROR] Column count of performance_schema.setup_actors is wrong. Expected 5, found 3. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.577776Z 0 [ERROR] Incorrect definition of table performance_schema.setup_objects: expected column ‘OBJECT_TYPE’ at position 0 to have type enum(‘EVENT’,’FUNCTION’,’PROCEDURE’,’TABLE’,’TRIGGER’, found type enum(‘TABLE’).<br>2016-11-25T06:35:16.578178Z 0 [ERROR] Column count of performance_schema.table_lock_waits_summary_by_table is wrong. Expected 68, found 73. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.578244Z 0 [ERROR] Column count of performance_schema.threads is wrong. Expected 17, found 14. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.578309Z 0 [ERROR] Column count of performance_schema.events_stages_current is wrong. Expected 12, found 10. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.578369Z 0 [ERROR] Column count of performance_schema.events_stages_history is wrong. Expected 12, found 10. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.578433Z 0 [ERROR] Column count of performance_schema.events_stages_history_long is wrong. Expected 12, found 10. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.578567Z 0 [ERROR] Incorrect definition of table performance_schema.events_stages_summary_by_account_by_event_name: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.578638Z 0 [ERROR] Incorrect definition of table performance_schema.events_stages_summary_by_user_by_event_name: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.578860Z 0 [ERROR] Column count of performance_schema.events_statements_current is wrong. Expected 41, found 40. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.578956Z 0 [ERROR] Column count of performance_schema.events_statements_history is wrong. Expected 41, found 40. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.579051Z 0 [ERROR] Column count of performance_schema.events_statements_history_long is wrong. Expected 41, found 40. Created with MySQL 50634, now running 50716. Please use mysql_upgrade to fix this error.<br>2016-11-25T06:35:16.579193Z 0 [ERROR] Incorrect definition of table performance_schema.events_statements_summary_by_account_by_event_name: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.579268Z 0 [ERROR] Incorrect definition of table performance_schema.events_statements_summary_by_user_by_event_name: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.579501Z 0 [ERROR] Native table ‘performance_schema’.’events_statements_summary_by_program’ has the wrong structure<br>2016-11-25T06:35:16.579559Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_current’ has the wrong structure<br>2016-11-25T06:35:16.579589Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_history’ has the wrong structure<br>2016-11-25T06:35:16.579614Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_history_long’ has the wrong structure<br>2016-11-25T06:35:16.579641Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_summary_by_thread_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.579662Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_summary_by_account_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.579688Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_summary_by_user_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.579711Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_summary_by_host_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.579736Z 0 [ERROR] Native table ‘performance_schema’.’events_transactions_summary_global_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.579803Z 0 [ERROR] Incorrect definition of table performance_schema.users: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.579885Z 0 [ERROR] Incorrect definition of table performance_schema.accounts: expected column ‘USER’ at position 0 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.580251Z 0 [ERROR] Native table ‘performance_schema’.’memory_summary_global_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.580286Z 0 [ERROR] Native table ‘performance_schema’.’memory_summary_by_account_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.580311Z 0 [ERROR] Native table ‘performance_schema’.’memory_summary_by_host_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.580338Z 0 [ERROR] Native table ‘performance_schema’.’memory_summary_by_thread_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.580364Z 0 [ERROR] Native table ‘performance_schema’.’memory_summary_by_user_by_event_name’ has the wrong structure<br>2016-11-25T06:35:16.580389Z 0 [ERROR] Native table ‘performance_schema’.’table_handles’ has the wrong structure<br>2016-11-25T06:35:16.580410Z 0 [ERROR] Native table ‘performance_schema’.’metadata_locks’ has the wrong structure<br>2016-11-25T06:35:16.580435Z 0 [ERROR] Native table ‘performance_schema’.’replication_connection_configuration’ has the wrong structure<br>2016-11-25T06:35:16.580459Z 0 [ERROR] Native table ‘performance_schema’.’replication_group_members’ has the wrong structure<br>2016-11-25T06:35:16.580483Z 0 [ERROR] Native table ‘performance_schema’.’replication_connection_status’ has the wrong structure<br>2016-11-25T06:35:16.580507Z 0 [ERROR] Native table ‘performance_schema’.’replication_applier_configuration’ has the wrong structure<br>2016-11-25T06:35:16.580548Z 0 [ERROR] Native table ‘performance_schema’.’replication_applier_status’ has the wrong structure<br>2016-11-25T06:35:16.580577Z 0 [ERROR] Native table ‘performance_schema’.’replication_applier_status_by_coordinator’ has the wrong structure<br>2016-11-25T06:35:16.580602Z 0 [ERROR] Native table ‘performance_schema’.’replication_applier_status_by_worker’ has the wrong structure<br>2016-11-25T06:35:16.580628Z 0 [ERROR] Native table ‘performance_schema’.’replication_group_member_stats’ has the wrong structure<br>2016-11-25T06:35:16.580649Z 0 [ERROR] Native table ‘performance_schema’.’prepared_statements_instances’ has the wrong structure<br>2016-11-25T06:35:16.580674Z 0 [ERROR] Native table ‘performance_schema’.’user_variables_by_thread’ has the wrong structure<br>2016-11-25T06:35:16.580698Z 0 [ERROR] Native table ‘performance_schema’.’status_by_account’ has the wrong structure<br>2016-11-25T06:35:16.580721Z 0 [ERROR] Native table ‘performance_schema’.’status_by_host’ has the wrong structure<br>2016-11-25T06:35:16.580745Z 0 [ERROR] Native table ‘performance_schema’.’status_by_thread’ has the wrong structure<br>2016-11-25T06:35:16.580768Z 0 [ERROR] Native table ‘performance_schema’.’status_by_user’ has the wrong structure<br>2016-11-25T06:35:16.580801Z 0 [ERROR] Native table ‘performance_schema’.’global_status’ has the wrong structure<br>2016-11-25T06:35:16.580825Z 0 [ERROR] Native table ‘performance_schema’.’session_status’ has the wrong structure<br>2016-11-25T06:35:16.580848Z 0 [ERROR] Native table ‘performance_schema’.’variables_by_thread’ has the wrong structure<br>2016-11-25T06:35:16.580867Z 0 [ERROR] Native table ‘performance_schema’.’global_variables’ has the wrong structure<br>2016-11-25T06:35:16.580907Z 0 [ERROR] Native table ‘performance_schema’.’session_variables’ has the wrong structure<br>2016-11-25T06:35:16.581008Z 0 [ERROR] Incorrect definition of table mysql.db: expected column ‘User’ at position 2 to have type char(32), found type char(16).<br>2016-11-25T06:35:16.581032Z 0 [ERROR] mysql.user has no <code>Event_priv</code> column at position 28<br>2016-11-25T06:35:16.581177Z 0 [ERROR] Event Scheduler: An error occurred when initializing system tables. Disabling the Event Scheduler.</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2016/11/26/mysql-upgrade-error/mysql.jpg&quot; title=&quot;mysql&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;今天把测试系统的MySQL镜像版本5.6.34替换为5.7.16，也就是把MySQL 5.6.34 升级到5.
      
    
    </summary>
    
    
      <category term="数据库" scheme="http://wendyeq.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="docker" scheme="http://wendyeq.me/tags/docker/"/>
    
      <category term="mysql" scheme="http://wendyeq.me/tags/mysql/"/>
    
      <category term="db" scheme="http://wendyeq.me/tags/db/"/>
    
  </entry>
  
  <entry>
    <title>Docker 添加多个非SSL镜像源</title>
    <link href="http://wendyeq.me/2016/11/26/docker-multiple-insecure-registry/"/>
    <id>http://wendyeq.me/2016/11/26/docker-multiple-insecure-registry/</id>
    <published>2016-11-26T05:31:24.000Z</published>
    <updated>2017-01-03T02:38:26.417Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/11/26/docker-multiple-insecure-registry/ssl.jpg" title="ssl"><p>题图来自网络</p><p>Docker 如果需要从非SSL镜像源中拉取镜像是需要配置–insecure-registry 参数的，在<a href="/2016/11/17/docker-registry-v2/">Docker 安装与Registry V2私有仓库搭建</a> 已经使用过。</p><blockquote><p>解决这个问题的最简单方式是修改docker的启动脚本，添加<code>-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock --insecure-registry 172.18.2.40:5000</code> 内容。<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@M-CentOS72-<span class="number">36</span> ~]# vim /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="keyword">Type</span>=<span class="keyword">notify</span></span><br><span class="line"># the <span class="keyword">default</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">to</span> use systemd <span class="keyword">for</span> cgroups because the <span class="keyword">delegate</span> issues still</span><br><span class="line"># exists <span class="keyword">and</span> systemd currently does <span class="keyword">not</span> support the cgroup feature <span class="keyword">set</span> required</span><br><span class="line"># <span class="keyword">for</span> containers run <span class="keyword">by</span> docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -H tcp:<span class="comment">//127.0.0.1:2375 -H unix:///var/run/docker.sock --insecure-registry 172.18.2.40:5000</span></span><br></pre></td></tr></table></figure></p></blockquote><p>那么如果要从多个非SSL镜像源中拉取镜像又需要怎么配置呢？其实很简单只需要再加一个–insecure-registry参数即可。<br><code>--insecure-registry 172.18.2.40:5000 --insecure-registry xx.xxx.com:5000</code><br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@M</span>-CentOS72-<span class="number">36</span> ~]<span class="comment"># vim /usr/lib/systemd/system/docker.service</span></span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="comment"># the default is not to use systemd for cgroups because the delegate issues still</span></span><br><span class="line"><span class="comment"># exists and systemd currently does not support the cgroup feature set required</span></span><br><span class="line"><span class="comment"># for containers run by docker</span></span><br><span class="line">ExecStart=<span class="regexp">/usr/bin</span><span class="regexp">/dockerd -H tcp:/</span><span class="regexp">/127.0.0.1:2375 -H unix:/</span><span class="regexp">//var</span><span class="regexp">/run/docker</span>.sock --insecure-registry <span class="number">172.18</span>.<span class="number">2.40</span><span class="symbol">:</span><span class="number">5000</span> --insecure-registry <span class="symbol">xx.xxx.com:</span><span class="number">5000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@M</span>-CentOS72-<span class="number">36</span> ~]<span class="comment"># systemctl daemon-reload</span></span><br><span class="line">[root<span class="variable">@M</span>-CentOS72-<span class="number">36</span> ~]<span class="comment"># systemctl start docker</span></span><br></pre></td></tr></table></figure></p><p>重启完Docker 就可以从xx.xxx.com:5000中拉取镜像。拉取完镜像之后最好为这些镜像重新打上新的标签并推送到自建的Registry 私服。这样只需要在一台机器上添加一次其他镜像源，而不需要所有机器都添加多个镜像源，其他机器统一从Registry 私服中拉取。添加–insecure-registry 是要重启Docker 服务，若是所有机器的Docker 服务都要重启，影响非常大。</p><p>为什么这么多非SSL的镜像源呢？因为这种镜像基本都是为公司内部服务，都是内网服务没有打算对外公开，所以没有必要上https。另一个原因就是沃通不再签发免费的SSL证书🐶。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2016/11/26/docker-multiple-insecure-registry/ssl.jpg&quot; title=&quot;ssl&quot;&gt;
&lt;p&gt;题图来自网络&lt;/p&gt;
&lt;p&gt;Docker 如果需要从非SSL镜像源中拉取镜像是需要配置–insecure-regist
      
    
    </summary>
    
    
      <category term="docker" scheme="http://wendyeq.me/tags/docker/"/>
    
      <category term="ssl" scheme="http://wendyeq.me/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>Nexus OSS3创建npm 私服</title>
    <link href="http://wendyeq.me/2016/11/24/npm-registry-in-nexus-oss-3/"/>
    <id>http://wendyeq.me/2016/11/24/npm-registry-in-nexus-oss-3/</id>
    <published>2016-11-24T13:38:36.000Z</published>
    <updated>2017-09-12T03:27:06.744Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/11/24/npm-registry-in-nexus-oss-3/npm.jpeg" title="npm"><p>题图来自<a href="https://www.npmjs.com" target="_blank" rel="noopener">npmjs.com</a></p><h2 id="npm-简介"><a href="#npm-简介" class="headerlink" title="npm 简介"></a>npm 简介</h2><p><a href="https://www.npmjs.com" target="_blank" rel="noopener">npm</a> 是 <a href="https://nodejs.org" target="_blank" rel="noopener">nodejs</a> 的包管理工具。有包管理工具的语言和系统才会更容易使用和流行。比如<a href="https://www.ubuntu.com/" target="_blank" rel="noopener">Ubuntu</a> 的apt-get，<a href="https://getfedora.org/" target="_blank" rel="noopener">Fedora</a> 的yum，<a href="https://golang.org/" target="_blank" rel="noopener">Go</a> 语言的go get。</p><ol><li>用户可以通过npm 命令从npm服务器下载第三方包和程序到本地。</li><li>用户可以将自己编写的包或程序上传到npm服务器供别人下载使用。</li></ol><p><a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> 博客程序就是通过npm 安装的。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">cli</span> -g</span><br></pre></td></tr></table></figure><p>由于国内的网络环境比较有特色，很多时候通过npm的官方服务器下载很慢或者下载失败，所以经常看到有人在找npm 镜像，当然也有人搭建npm 镜像。比较出名且速度快的是<a href="http://npm.taobao.org/" target="_blank" rel="noopener">淘宝npm 镜像</a>，号称10分钟同步一次。<br>在前几天已经用<a href="/2016/11/20/nexus-oss-3-in-docker/">Docker 搭建Nexus OSS3私服</a>，而且Nexus3是支持npm的，所以就简单的利用Nexus3创建npm 私服。<br><a id="more"></a></p><h2 id="创建npm-私服"><a href="#创建npm-私服" class="headerlink" title="创建npm 私服"></a>创建npm 私服</h2><p>打开Nexus，在Nexus 的设置中点击Repositories，然后点击Create repositry按钮。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/step1.jpg" title="step1"></p><p>在Repositry 中可以创建三种类型的仓库，分别是group、hosted和proxy。<br>group 指的是仓库组，可以包括hosted 和proxy的仓库。<br>hosted 是指自己的私有仓库，可以上传私有代码到上面。<br>proxy 就是代理镜像仓库。<br>一般情况下无论是Maven、pypi 还是npm，这3种类型的仓库都会分别建一个，然后用的时候指向group 仓库。<br>创建的顺序是先hosted 或proxy ，最后才是group，因为group要包括hosted 和proxy。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/step2.jpg" title="step2"></p><h3 id="创建hosted"><a href="#创建hosted" class="headerlink" title="创建hosted"></a>创建hosted</h3><p>hosted仓库只需要填上仓库名即可，其它的默认。因为只有一个Blob Stores 所以不需要选择，也可以按类型每一类都建一个Blob Store。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/step3.jpg" title="step3"></p><h3 id="创建proxy"><a href="#创建proxy" class="headerlink" title="创建proxy"></a>创建proxy</h3><p>proxy仓库不仅需要填名字而且需要填上代理服务器地址，这里填淘宝的npm地址<code>https://registry.npm.taobao.org</code>。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/step4.jpg" title="step4"></p><h3 id="创建group"><a href="#创建group" class="headerlink" title="创建group"></a>创建group</h3><p>填上仓库名，把刚刚创建的两个仓库移到右边的框即可。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/step5.png" title="step5"></p><h2 id="npm-私服使用"><a href="#npm-私服使用" class="headerlink" title="npm 私服使用"></a>npm 私服使用</h2><p>经过以上的几个步骤npm 私服就创建完毕啦，私服使用起来也很简单，跟使用镜像一样。<br>在用户的主目录下的.npmrc文件中添加<code>registry = http://172.18.2.40:8081/repository/w-npm-group/</code>。Windows的用户主目录是C:\Users\用户名，比如我的就是C:\Users\wendyeq，MacOS和Linux直接在终端执行<code>cd ~</code>即可，没有这个文件的话就新建一个。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/npmrc.png" title="npmrc"></p><p><code>http://172.18.2.40:8081/repository/w-npm-group/</code>就是刚刚创建group的URL，换为<code>https://registry.npm.taobao.org</code> 就是直接使用淘宝镜像啦。<br><img src="/2016/11/24/npm-registry-in-nexus-oss-3/w-npm-group.png" title="w-npm-group"></p><p>最后用<code>npm -loglevel info install mysql</code>测试验证包是否从npm私服下载。<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">npm</span> -loglevel info install mysql</span><br><span class="line"><span class="built_in">npm</span> info <span class="literal">it</span> worked <span class="keyword">if</span> <span class="literal">it</span> ends <span class="keyword">with</span> ok</span><br><span class="line"><span class="built_in">npm</span> info using <span class="built_in">npm</span>@<span class="number">3.10</span>.<span class="number">9</span></span><br><span class="line"><span class="built_in">npm</span> info using node@v7.<span class="number">1.0</span></span><br><span class="line"><span class="built_in">npm</span> http request GET http:<span class="regexp">//172.18.2.40:8081/repository/w-npm-group/mysql</span></span><br><span class="line"><span class="regexp">npm http 200 http://</span><span class="number">172.18</span>.<span class="number">2.40</span>:<span class="number">8081</span>/repository/w-<span class="built_in">npm</span>-group/mysql</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2016/11/24/npm-registry-in-nexus-oss-3/npm.jpeg&quot; title=&quot;npm&quot;&gt;
&lt;p&gt;题图来自&lt;a href=&quot;https://www.npmjs.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;npmjs.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;npm-简介&quot;&gt;&lt;a href=&quot;#npm-简介&quot; class=&quot;headerlink&quot; title=&quot;npm 简介&quot;&gt;&lt;/a&gt;npm 简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;npm&lt;/a&gt; 是 &lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nodejs&lt;/a&gt; 的包管理工具。有包管理工具的语言和系统才会更容易使用和流行。比如&lt;a href=&quot;https://www.ubuntu.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ubuntu&lt;/a&gt; 的apt-get，&lt;a href=&quot;https://getfedora.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fedora&lt;/a&gt; 的yum，&lt;a href=&quot;https://golang.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Go&lt;/a&gt; 语言的go get。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户可以通过npm 命令从npm服务器下载第三方包和程序到本地。&lt;/li&gt;
&lt;li&gt;用户可以将自己编写的包或程序上传到npm服务器供别人下载使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; 博客程序就是通过npm 安装的。&lt;/p&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt; -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于国内的网络环境比较有特色，很多时候通过npm的官方服务器下载很慢或者下载失败，所以经常看到有人在找npm 镜像，当然也有人搭建npm 镜像。比较出名且速度快的是&lt;a href=&quot;http://npm.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;淘宝npm 镜像&lt;/a&gt;，号称10分钟同步一次。&lt;br&gt;在前几天已经用&lt;a href=&quot;/2016/11/20/nexus-oss-3-in-docker/&quot;&gt;Docker 搭建Nexus OSS3私服&lt;/a&gt;，而且Nexus3是支持npm的，所以就简单的利用Nexus3创建npm 私服。&lt;br&gt;
    
    </summary>
    
    
      <category term="registry" scheme="http://wendyeq.me/tags/registry/"/>
    
      <category term="私服" scheme="http://wendyeq.me/tags/%E7%A7%81%E6%9C%8D/"/>
    
      <category term="nexus" scheme="http://wendyeq.me/tags/nexus/"/>
    
      <category term="npm" scheme="http://wendyeq.me/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Docker 入门简介</title>
    <link href="http://wendyeq.me/2016/11/22/docker-introduction/"/>
    <id>http://wendyeq.me/2016/11/22/docker-introduction/</id>
    <published>2016-11-22T13:12:30.000Z</published>
    <updated>2016-11-23T07:36:12.289Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker优点"><a href="#Docker优点" class="headerlink" title="Docker优点"></a>Docker优点</h2><p>在<a href="/2016/11/17/docker-registry-v2/">Docker 安装与Registry V2私有仓库搭建</a> 中已经简单提过Docker。<br>Docker 的优点很多：</p><ol><li>高效利用系统资源</li><li>更快的启动速度</li><li>一致的运行环境</li><li>持续交付和部署</li><li>方便的迁移</li><li>轻松的维护和扩展</li><li>采用我喜欢的Go语言进行开发</li></ol><h2 id="Docker基础"><a href="#Docker基础" class="headerlink" title="Docker基础"></a>Docker基础</h2><p>Docker 3大基础概念：镜像、容器、仓库。</p><a id="more"></a><h3 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h3><p>Docker镜像是一个特殊的文件系统，包括容器运行时的程序、库、资源和配置文件，不包含动态数据。Docker 采用<a href="https://en.wikipedia.org/wiki/UnionFS" target="_blank" rel="noopener">UnionFS</a> 构建镜像。镜像的构建是一层层的，每一层构建完就不会发生改变，也就是说镜像的内容在构建之后不会被改变。</p><p>对镜像的操作通常有以下几种：</p><p><strong>获取镜像</strong><br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">docker</span> pull [选项] [<span class="type">Docker</span> <span class="type">Registry</span>地址]&lt;仓库名&gt;:&lt;标签&gt;</span><br><span class="line"><span class="title">docker</span> pull <span class="number">172.18</span><span class="number">.2</span><span class="number">.40</span>:<span class="number">5000</span>/sona<span class="keyword">type</span>/nexus3:3.1.0</span><br><span class="line"><span class="title">docker</span> pull sona<span class="keyword">type</span>/nexus3</span><br><span class="line"><span class="title">docker</span> pull registry</span><br></pre></td></tr></table></figure></p><p><em>172.18.2.40:5000</em> 是Docker Registry地址，没有这个地址则默认是<a href="https://hub.docker.com" target="_blank" rel="noopener">hub.docker.com</a><br><em>sonatype/nexus3</em> 是仓库名，仓库名一般是“用户名/软件名”组成。若只有软件名，则默认用户名是library。<br><em>3.1.0</em> 是标签，也叫版本号，不指定标签则默认是latest，最好还是指定标签，更直观的知道用的是那个版本。</p><p><strong>运行镜像</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p <span class="number">8080</span>:<span class="number">8081</span> -v <span class="regexp">/data/</span><span class="string">nexus:</span><span class="regexp">/nexus-data --name nexus 172.18.2.40:5000/</span>sonatype/<span class="string">nexus3:</span><span class="number">3.1</span><span class="number">.0</span></span><br></pre></td></tr></table></figure></p><p><em>-d</em> 指的是后台运行<br><em>-p 8080:8081</em> 指把容器8081端口映射到主机8080端口，格式为“主机端口:容器端口”<br><em>-v /data/nexus:/nexus-data</em> 把容器里的/nexus-data 目录，挂载到主机的/data/nexus目录。<br><em>–name nexus</em> 对容器命名<br><em>172.18.2.40:5000/sonatype/nexus3:3.1.0</em> 镜像名<br>运行镜像之后就变为容器啦。</p><p><strong>列出镜像</strong><br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker images</span></span><br></pre></td></tr></table></figure></p><p><strong>创建镜像</strong><br>创建镜像有2种方式，一种是commit，另一种是Dockerfile。</p><ol><li>下载已有镜像，添加内容，然后commit，<code>docker commit -m “message” 容器id 仓库:标签</code>。</li><li>利用Dockerfile创建<code>docker build -t=“仓库:标签”</code>，一个镜像不能超过127层。</li></ol><p><strong>删除镜像</strong><br>没有被使用的镜像才可以被删除<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> rmi 仓库:标签</span><br></pre></td></tr></table></figure></p><p>删除没有标签的本地镜像<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -<span class="selector-tag">q</span> -f <span class="string">"dangling=true”)</span></span><br></pre></td></tr></table></figure></p><p><strong>导入镜像</strong><br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">cat</span> ubuntu<span class="number">-16.10</span>-x86_64-minimal.tar.gz | docker <span class="keyword">import</span> - ubuntu:16.10</span><br></pre></td></tr></table></figure></p><p><strong>上传镜像</strong><br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">push</span> <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/sonatype/nexus3:<span class="number">3.1</span><span class="meta">.0</span></span><br></pre></td></tr></table></figure></p><p><strong>保存和加载镜像</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker save -o xxx<span class="selector-class">.tar</span> 仓库:标签</span><br><span class="line">docker load —<span class="selector-tag">input</span> xxx.tar</span><br></pre></td></tr></table></figure></p><h3 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h3><p>容器的实质是进程，进程运行在一个隔离的环境里。<br>容器运行是产生的数据如果没有映射出来的话，将会在容器消亡的时候消亡。<br>容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用数据卷或者绑定宿主目录。</p><p><strong>创建并启动</strong><br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"></span></span><br></pre></td></tr></table></figure></p><p>跟在镜像中说明的一样，从镜像新建并启动容器。</p><p><strong>启动已停止的容器</strong><br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="literal">start</span> 容器名</span><br></pre></td></tr></table></figure></p><p><strong>停止容器</strong><br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">stop</span> 容器名</span><br></pre></td></tr></table></figure></p><p><strong>重启容器</strong><br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">restart</span> 容器名</span><br></pre></td></tr></table></figure></p><p><strong>打印容器启动日志</strong><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> logs 容器名</span><br></pre></td></tr></table></figure></p><p><strong>进入容器</strong><br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">attach</span> 容器名</span><br></pre></td></tr></table></figure></p><p><strong>导出容器</strong><br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">docker</span> <span class="keyword">export</span> 容器名  &gt; xxx.tar</span><br><span class="line"><span class="title">cat</span> xxx.tar | docker <span class="keyword">import</span> - xx/xxx:v1.0</span><br></pre></td></tr></table></figure></p><p>docker import 将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），可以重新指定标签等元数据信息。<br>docker load 将保存完整记录，体积要大，不能指定标签等元数据信息。</p><p><strong>删除容器</strong><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">rm</span> 容器名 <span class="comment">//删除停止状态的容器，删除运行状态的要加 -f 参数。</span></span><br><span class="line"></span><br><span class="line">docker <span class="keyword">rm</span> <span class="variable">$&#123;docker</span> ps -a -q&#125; <span class="comment">//删除所有停止状态的容器</span></span><br></pre></td></tr></table></figure></p><h3 id="Docker仓库"><a href="#Docker仓库" class="headerlink" title="Docker仓库"></a>Docker仓库</h3><p>Registry包含多个仓库，每个仓库包含多个标签，每个标签对应一个镜像。<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker tag wendyeq/tomcat8 <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8:<span class="number">1.0</span></span><br><span class="line">docker <span class="keyword">push</span> <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8:<span class="number">1.0</span></span><br><span class="line">docker pull <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8:<span class="number">1.0</span></span><br></pre></td></tr></table></figure></p><h2 id="MORE"><a href="#MORE" class="headerlink" title="MORE"></a>MORE</h2><p>更多的内容请使用神器<code>--help</code><br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="comment">--help</span></span><br><span class="line">docker <span class="built_in">run</span> <span class="comment">--help</span></span><br><span class="line">docker start <span class="comment">--help</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>或者查看<a href="https://docs.docker.com/engine/reference/commandline/cli/" target="_blank" rel="noopener">Docker命令行文档</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Docker优点&quot;&gt;&lt;a href=&quot;#Docker优点&quot; class=&quot;headerlink&quot; title=&quot;Docker优点&quot;&gt;&lt;/a&gt;Docker优点&lt;/h2&gt;&lt;p&gt;在&lt;a href=&quot;/2016/11/17/docker-registry-v2/&quot;&gt;Docker 安装与Registry V2私有仓库搭建&lt;/a&gt; 中已经简单提过Docker。&lt;br&gt;Docker 的优点很多：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高效利用系统资源&lt;/li&gt;
&lt;li&gt;更快的启动速度&lt;/li&gt;
&lt;li&gt;一致的运行环境&lt;/li&gt;
&lt;li&gt;持续交付和部署&lt;/li&gt;
&lt;li&gt;方便的迁移&lt;/li&gt;
&lt;li&gt;轻松的维护和扩展&lt;/li&gt;
&lt;li&gt;采用我喜欢的Go语言进行开发&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Docker基础&quot;&gt;&lt;a href=&quot;#Docker基础&quot; class=&quot;headerlink&quot; title=&quot;Docker基础&quot;&gt;&lt;/a&gt;Docker基础&lt;/h2&gt;&lt;p&gt;Docker 3大基础概念：镜像、容器、仓库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://wendyeq.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker 搭建Nexus OSS3私服</title>
    <link href="http://wendyeq.me/2016/11/20/nexus-oss-3-in-docker/"/>
    <id>http://wendyeq.me/2016/11/20/nexus-oss-3-in-docker/</id>
    <published>2016-11-20T10:43:19.000Z</published>
    <updated>2016-11-25T02:31:00.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nexus-简介"><a href="#Nexus-简介" class="headerlink" title="Nexus 简介"></a>Nexus 简介</h2><p>Nexus 是个仓库管理器，目前主要分2大版本：2.X 和 3.X。2.X 主要支持的格式是Maven、P2、OBR、Yum。3.X主要支持的是Docker、NuGet、npm、Bower、Pypi、Ruby Gems，当然也支持构建工具Maven 和Gradle。Nexus 3只支持Oracle jdk8，不支持其它版本的JDK，比如OpenJDK。更多内容可以查看<a href="https://www.sonatype.com/download-oss-sonatype" target="_blank" rel="noopener">Nexus下载页面</a>。</p><h2 id="Nexus-安装"><a href="#Nexus-安装" class="headerlink" title="Nexus 安装"></a>Nexus 安装</h2><p>本次安装的Nexus OSS的版本是3.1.0。<br>Nexus3 Docker安装脚本地址是<a href="https://github.com/sonatype/docker-nexus3" target="_blank" rel="noopener">docker-nexus3</a>。其实安装起来比里面的描述要简单一些。先把镜像拉取下来，然后直接run 就可以了。但是因为当时操作的时候，拉取镜像的机器与实际安装的机器不是同一台，所以要把镜像推送的registry 仓库，然后再运行。<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull sonatype/nexus3:<span class="number">3.1</span><span class="meta">.0</span></span><br><span class="line">docker tag sonatype/nexus3:<span class="number">3.1</span><span class="meta">.0</span> <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/sonatype/nexus3:<span class="number">3.1</span><span class="meta">.0</span></span><br><span class="line">docker <span class="keyword">push</span> <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/sonatype/nexus3:<span class="number">3.1</span><span class="meta">.0</span></span><br></pre></td></tr></table></figure></p><p>创建存储文件目录，并修改目录拥有者，容器里面运行的uid 是 200.<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> /<span class="class"><span class="keyword">data</span>/nexus &amp;&amp; chown -<span class="type">R</span> 200 /<span class="keyword">data</span>/nexus</span></span><br><span class="line"><span class="title">docker</span> run -d -p <span class="number">8081</span>:<span class="number">8081</span> -v /<span class="class"><span class="keyword">data</span>/nexus:/nexus-<span class="keyword">data</span> <span class="comment">--name nexus 172.18.2.40:5000/sonatype/nexus3:3.1.0</span></span></span><br></pre></td></tr></table></figure></p><p>就是这么简单就安装好了，如果不能访问的话看看是不是iptable 没有开放8081端口。<br>通过<code>docker logs nexus</code> 可以查看启动日志。</p><h2 id="Nexus-使用"><a href="#Nexus-使用" class="headerlink" title="Nexus 使用"></a>Nexus 使用</h2><p>安装好之后默认的用户名／密码是admin／admin123，需要自己修改密码。<br>默认的maven-central 使用的是<a href="https://repo1.maven.org/maven2/" target="_blank" rel="noopener">https://repo1.maven.org/maven2/</a> 地址，速度上没有UK 的快，所以修改为<a href="http://uk.maven.org/maven2/" target="_blank" rel="noopener">http://uk.maven.org/maven2/</a>。<br><img src="/2016/11/20/nexus-oss-3-in-docker/repository.png" title="Repository"></p><p>因为Gradle和Maven都有在用，Gradle是可以直接使用Maven的仓库的，所以下面以Gradle举例。修改build.gradle文件里面的repositories。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">repositories</span> &#123;</span><br><span class="line">    <span class="section">maven</span> &#123;</span><br><span class="line">        <span class="attribute">url</span> <span class="string">'http://172.18.2.40:8081/repository/maven-public/'</span></span><br><span class="line">    &#125;</span><br><span class="line">    jcenter()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其实国内还是有阿里云的Nexus这种比较快的仓库<a href="http://maven.aliyun.com/nexus/content/groups/public/" target="_blank" rel="noopener">http://maven.aliyun.com/nexus/content/groups/public/</a>，但是一些私包不能上传到上面，只能自己搭建一个私服。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Nexus-简介&quot;&gt;&lt;a href=&quot;#Nexus-简介&quot; class=&quot;headerlink&quot; title=&quot;Nexus 简介&quot;&gt;&lt;/a&gt;Nexus 简介&lt;/h2&gt;&lt;p&gt;Nexus 是个仓库管理器，目前主要分2大版本：2.X 和 3.X。2.X 主要支持的格式是
      
    
    </summary>
    
    
      <category term="docker" scheme="http://wendyeq.me/tags/docker/"/>
    
      <category term="私服" scheme="http://wendyeq.me/tags/%E7%A7%81%E6%9C%8D/"/>
    
      <category term="nexus" scheme="http://wendyeq.me/tags/nexus/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装与Registry V2私有仓库搭建</title>
    <link href="http://wendyeq.me/2016/11/17/docker-registry-v2/"/>
    <id>http://wendyeq.me/2016/11/17/docker-registry-v2/</id>
    <published>2016-11-17T12:00:17.000Z</published>
    <updated>2016-11-25T02:31:00.921Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 是一个开源的容器引擎，可以让开发者把应用以及依赖打包到一个可移植的容器中。Docker 采用Go语言编写，当时学习Go语言的时候已经知道这个神器，但是一直没有合适的场景正式使用，现在机会来啦。</p><p>Registry 是Docker 镜像的仓库，使用Registry 能搭建私有的Docker仓库，方便分发自定义镜像。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>本文的内容在以下版本中测试通过，不同的版本可能存在不同的地方，以下内容仅供参考。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS72-40 /]<span class="comment"># cat /etc/centos-release</span></span><br><span class="line">CentOS Linux <span class="keyword">release</span> <span class="number">7.2</span><span class="number">.1511</span> (Core)</span><br><span class="line"></span><br><span class="line">[root@CentOS72<span class="number">-40</span> /]<span class="comment"># docker version</span></span><br><span class="line"><span class="keyword">Client</span>:</span><br><span class="line"> <span class="keyword">Version</span>:      <span class="number">1.12</span><span class="number">.3</span></span><br><span class="line"> API <span class="keyword">version</span>:  <span class="number">1.24</span></span><br><span class="line"> <span class="keyword">Go</span> <span class="keyword">version</span>:   go1<span class="number">.6</span><span class="number">.3</span></span><br><span class="line"> Git <span class="keyword">commit</span>:   <span class="number">6</span>b644ec</span><br><span class="line"> Built:</span><br><span class="line"> OS/Arch:      linux/amd64</span><br><span class="line"></span><br><span class="line"><span class="keyword">Server</span>:</span><br><span class="line"> <span class="keyword">Version</span>:      <span class="number">1.12</span><span class="number">.3</span></span><br><span class="line"> API <span class="keyword">version</span>:  <span class="number">1.24</span></span><br><span class="line"> <span class="keyword">Go</span> <span class="keyword">version</span>:   go1<span class="number">.6</span><span class="number">.3</span></span><br><span class="line"> Git <span class="keyword">commit</span>:   <span class="number">6</span>b644ec</span><br><span class="line"> Built:</span><br><span class="line"> OS/Arch:      linux/amd64</span><br><span class="line"></span><br><span class="line">[root@CentOS72<span class="number">-40</span> /]<span class="comment"># docker images registry</span></span><br><span class="line"> REPOSITORY          TAG                 IMAGE <span class="keyword">ID</span>            CREATED             <span class="keyword">SIZE</span></span><br><span class="line"> registry            <span class="number">2.5</span><span class="number">.1</span>               c9bd19d022f6        <span class="number">4</span> weeks ago         <span class="number">33.27</span> MB</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a>Docker 安装</h2><p>安装Docker 需要内核是3.10 以上64位的Linux 系统。查看Linux 内核版本，CentOS7.2是没问题的。（现在Mac 和 Windows 都可以安装Docker）<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@CentOS72-40 ~]</span># <span class="selector-tag">uname</span> <span class="selector-tag">-r</span></span><br><span class="line">3<span class="selector-class">.10</span><span class="selector-class">.0-327</span><span class="selector-class">.36</span><span class="selector-class">.3</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure></p><p>CentOS 7 之后的默认防火墙是firewall，习惯使用iptables 做防火墙，所以还是修改为iptables 做防火墙。<br>停止firewall ，然后禁止firewall 开机启动。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># systemctl stop firewalld</span></span><br><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># systemctl disable firewalld</span></span><br></pre></td></tr></table></figure></p><p>检查iptables 的状态，若没有安装iptables 服务则需要安装iptables-services。<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS72-40 ~]<span class="comment"># systemctl status iptables</span></span><br><span class="line">· iptables.service</span><br><span class="line">   Loaded:<span class="built_in"> not-found </span>(Reason: No such file<span class="built_in"> or </span>directory)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line"></span><br><span class="line">[root@CentOS72-40 ~]<span class="comment"># yum install iptables-services</span></span><br></pre></td></tr></table></figure></p><p>编辑iptables 防火墙文件，开放22和5000端口（5000端口供Registry对外提供服务）。<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS72-<span class="number">40</span> ~]<span class="comment"># vim /etc/sysconfig/iptables</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sample configuration for iptables service</span></span><br><span class="line"><span class="comment"># you can edit this manually or use system-config-firewall</span></span><br><span class="line"><span class="comment"># please do not ask us to add additional ports/services to this default configuration</span></span><br><span class="line">*filter</span><br><span class="line">:INPUT ACCEPT [<span class="number">0</span>:<span class="number">0</span>]</span><br><span class="line">:FORWARD ACCEPT [<span class="number">0</span>:<span class="number">0</span>]</span><br><span class="line">:OUTPUT ACCEPT [<span class="number">0</span>:<span class="number">0</span>]</span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m <span class="keyword">state</span> --state NEW -m tcp --dport <span class="number">22</span> -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m <span class="keyword">state</span> --state NEW -m tcp --dport <span class="number">5000</span> -j ACCEPT</span><br><span class="line"></span><br><span class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</span><br><span class="line">COMMIT</span><br></pre></td></tr></table></figure></p><p>设置iptables 防火墙开机启动，启动防火墙使更改的配置生效。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># systemctl enable iptables</span></span><br><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># systemctl start iptables</span></span><br></pre></td></tr></table></figure></p><p>创建Docker 的yum 的仓库。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS72-40 ~]<span class="comment"># tee /etc/yum.repos.d/docker.repo &lt;&lt;-'EOF'</span></span><br><span class="line">[dockerrepo]</span><br><span class="line">name=Docker Repository</span><br><span class="line">baseurl=https://yum.dockerproject.org/repo/main/centos/7/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://yum.dockerproject.org/gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></p><p>安装docker-engine 会自动安装依赖 docker-engine-selinux。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># yum install docker-engine</span></span><br></pre></td></tr></table></figure></p><p>设置开机启动docker，然后启动docker。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># systemctl enable docker</span></span><br><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> ~]<span class="meta"># systemctl start docker</span></span><br></pre></td></tr></table></figure></p><p>安装完docker之后将会发现创建docker0网卡。<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS72-40 /]<span class="comment"># ifconfig</span></span><br><span class="line">docker0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.17.0.1  netmask 255.255.0.0  broadcast 0.0.0.0</span><br><span class="line">        ether 02:42:2b:79:c2:73  txqueuelen<span class="number"> 0 </span> (Ethernet)</span><br><span class="line">        RX packets<span class="number"> 0 </span> bytes<span class="number"> 0 </span>(0.0 B)</span><br><span class="line">        RX errors<span class="number"> 0 </span> dropped<span class="number"> 0 </span> overruns<span class="number"> 0 </span> frame 0</span><br><span class="line">        TX packets<span class="number"> 0 </span> bytes<span class="number"> 0 </span>(0.0 B)</span><br><span class="line">        TX errors<span class="number"> 0 </span> dropped<span class="number"> 0 </span>overruns<span class="number"> 0 </span> carrier<span class="number"> 0 </span> collisions 0</span><br></pre></td></tr></table></figure></p><h2 id="配置Registry"><a href="#配置Registry" class="headerlink" title="配置Registry"></a>配置Registry</h2><p>拉取2.5.1版本的Registry 镜像。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS72</span><span class="number">-40</span> /]<span class="meta"># docker pull registry:2.5.1</span></span><br></pre></td></tr></table></figure></p><p>启动Registry镜像。根据Registry的文档把/tmp/registry-dev 目录映射出来是有问题的，真正的数据不是存储再这个目录。不知道是不新版的存在这个目录，反正2.5.1版的Registry 数据不是保存在这里，进入容器发现真正存储镜像的时在/var/lib/registry 目录，所以把这个目录映射出来。（跟着官方文档居然也走不通，郁闷，会不会是官方故意挖个坑让大家踩的呢）<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@CentOS</span>72<span class="number">-40</span> <span class="regexp">/]# docker run -d -p 5000:5000 -v /</span>data<span class="regexp">/registry:/</span>var<span class="regexp">/lib/</span>registry --name registry <span class="string">registry:</span><span class="number">2.5</span><span class="number">.1</span></span><br></pre></td></tr></table></figure></p><p> 打开<a href="http://172.18.2.40:5000/v2/_catalog" target="_blank" rel="noopener">http://172.18.2.40:5000/v2/_catalog</a> 验证是否安装成功。</p><p> 若是启用iptables的时候没有放开5000端口，在registry 运行的时候再放开。之后停了registry 重新打开registry 就会有下面的错误。不仅仅是Registry这个容器存在这个问题，所有容器的在运行中，主机的iptables 被修改过，停了容器再启动都会有这个问题。目前没有找到好的解决版本，但是重新启动docker 服务 <code>systemclt restart docker</code> 可以临时解决这个问题。<br> <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">Error</span> response <span class="keyword">from</span> daemon: driver failed programming external connectivity on endpoint registry (4b748e54bb59d8bfe1f1bd961c6f0fcfbd8ec94c75c5d4880134bd2a453b0d51): iptables failed: iptables --wait -t<span class="built_in"> nat </span>-A DOCKER -p tcp -d 0/0 --dport 5000 -j DNAT --to-destination 172.17.0.2:5000 ! -i docker0: iptables: <span class="literal">No</span> chain/target/match by that name.</span><br><span class="line"> (exit status 1)</span><br></pre></td></tr></table></figure></p><h2 id="使用Registry"><a href="#使用Registry" class="headerlink" title="使用Registry"></a>使用Registry</h2><p>对已经存在的镜像<code>wendyeq/tomcat8</code> 打上带Registry地址的tag，版本号位1.0。然后推送到Registry，发现推送不了，原因是Registry V2采用https协议。<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@M-CentOS72-<span class="number">36</span> ~]# docker tag wendyeq/tomcat8 <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8:<span class="number">1.0</span></span><br><span class="line">[root@M-CentOS72-<span class="number">36</span> ~]# docker <span class="keyword">push</span> <span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8:<span class="number">1.0</span></span><br><span class="line">The <span class="keyword">push</span> refers to a repository [<span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8]</span><br><span class="line">Get https://<span class="number">172.18</span><span class="meta">.2</span><span class="meta">.40</span>:<span class="number">5000</span>/v1/_ping: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure></p><p>解决这个问题的最简单方式是修改docker的启动脚本，添加<code>-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock --insecure-registry 172.18.2.40:5000</code> 内容。<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@M-CentOS72-<span class="number">36</span> ~]# vim /usr/lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="keyword">Type</span>=<span class="keyword">notify</span></span><br><span class="line"># the <span class="keyword">default</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">to</span> use systemd <span class="keyword">for</span> cgroups because the <span class="keyword">delegate</span> issues still</span><br><span class="line"># exists <span class="keyword">and</span> systemd currently does <span class="keyword">not</span> support the cgroup feature <span class="keyword">set</span> required</span><br><span class="line"># <span class="keyword">for</span> containers run <span class="keyword">by</span> docker</span><br><span class="line">ExecStart=/usr/bin/dockerd -H tcp:<span class="comment">//127.0.0.1:2375 -H unix:///var/run/docker.sock --insecure-registry 172.18.2.40:5000</span></span><br></pre></td></tr></table></figure></p><p>修改完之后就可以推送到Registry 的私有仓库啦。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@M</span>-CentOS72<span class="number">-36</span> ~]<span class="meta"># systemctl start docker</span></span><br><span class="line">Warning: docker.service changed on disk. <span class="built_in">Run</span> <span class="string">'systemctl daemon-reload'</span> <span class="keyword">to</span> reload units.</span><br><span class="line">[root<span class="symbol">@M</span>-CentOS72<span class="number">-36</span> ~]<span class="meta"># systemctl daemon-reload</span></span><br><span class="line">[root<span class="symbol">@M</span>-CentOS72<span class="number">-36</span> ~]<span class="meta"># systemctl start docker</span></span><br><span class="line">[root<span class="symbol">@M</span>-CentOS72<span class="number">-36</span> ~]<span class="meta"># docker push 172.18.2.40:5000/wendyeq/tomcat8</span></span><br><span class="line">The push refers <span class="keyword">to</span> a repository [<span class="number">172.18</span><span class="number">.2</span><span class="number">.40</span>:<span class="number">5000</span>/wendyeq/tomcat8]</span><br></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Docker 和 Registry 的安装都比较简单，但是Registry查找镜像好麻烦，特别是查看版本号，要好好研究一下Registry 的文档才行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 是一个开源的容器引擎，可以让开发者把应用以及依赖打包到一个可移植的容器中。Docker 采用Go语言编写，当时学习Go语言的时候已经知道这个神器，但是一直没有合适的场景正式使用，现在机会来啦。&lt;/p&gt;
&lt;p&gt;Registry 是Docker 镜像的仓库，使用Registry 能搭建私有的Docker仓库，方便分发自定义镜像。&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;本文的内容在以下版本中测试通过，不同的版本可能存在不同的地方，以下内容仅供参考。&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@CentOS72-40 /]&lt;span class=&quot;comment&quot;&gt;# cat /etc/centos-release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CentOS Linux &lt;span class=&quot;keyword&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1511&lt;/span&gt; (Core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@CentOS72&lt;span class=&quot;number&quot;&gt;-40&lt;/span&gt; /]&lt;span class=&quot;comment&quot;&gt;# docker version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Client&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;Version&lt;/span&gt;:      &lt;span class=&quot;number&quot;&gt;1.12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; API &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;1.24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;Go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;:   go1&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt;:   &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;b644ec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Built:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; OS/Arch:      linux/amd64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Server&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;Version&lt;/span&gt;:      &lt;span class=&quot;number&quot;&gt;1.12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; API &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;1.24&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;Go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;:   go1&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt;:   &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;b644ec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Built:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; OS/Arch:      linux/amd64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@CentOS72&lt;span class=&quot;number&quot;&gt;-40&lt;/span&gt; /]&lt;span class=&quot;comment&quot;&gt;# docker images registry&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; REPOSITORY          TAG                 IMAGE &lt;span class=&quot;keyword&quot;&gt;ID&lt;/span&gt;            CREATED             &lt;span class=&quot;keyword&quot;&gt;SIZE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; registry            &lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;               c9bd19d022f6        &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; weeks ago         &lt;span class=&quot;number&quot;&gt;33.27&lt;/span&gt; MB&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://wendyeq.me/tags/docker/"/>
    
      <category term="registry" scheme="http://wendyeq.me/tags/registry/"/>
    
      <category term="私服" scheme="http://wendyeq.me/tags/%E7%A7%81%E6%9C%8D/"/>
    
  </entry>
  
  <entry>
    <title>《从0到1》读书笔记</title>
    <link href="http://wendyeq.me/2016/08/09/zero-to-one/"/>
    <id>http://wendyeq.me/2016/08/09/zero-to-one/</id>
    <published>2016-08-09T14:41:27.000Z</published>
    <updated>2016-11-23T07:36:12.257Z</updated>
    
    <content type="html"><![CDATA[<p>最近花了几天时间把《从0到1》看完了一遍，里面有几个问题令人印象深刻。书中描述的很多内容其实都在职场中遇到，但是自己没有总结出来。《从0到1》把很多商业经验，特别是初闯企业的商业经验都终结出来，每一个有志于创业的人都应读一读。</p><p>几个值得深思的问题：</p><p>1、在什么重要问题上你与其他人有不同看法？</p><p>2、工程问题：你的技术具有突破性，而不紧急是稍有改进码？</p><p>3、时机问题：现在开创事业，时机合适吗？</p><p>4、垄断问题：开创之初，是在一个小市场抢占大份额吗？</p><p>5、人员问题：你有合适的团队吗？</p><p>6、销售问题：除了创造产品，你有没有办法销售产品？</p><p>7、持久问题：未来10年或20年，你能保住自己的市场地位吗？</p><p>8、秘密问题：你有没有找到一个其他人没有发现的独特机会？</p><p>《从0到1》读书笔记思维导图（逆时针阅读）：</p><a id="more"></a><img src="/2016/08/09/zero-to-one/zero-to-one-mind.png" title="Mind">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近花了几天时间把《从0到1》看完了一遍，里面有几个问题令人印象深刻。书中描述的很多内容其实都在职场中遇到，但是自己没有总结出来。《从0到1》把很多商业经验，特别是初闯企业的商业经验都终结出来，每一个有志于创业的人都应读一读。&lt;/p&gt;
&lt;p&gt;几个值得深思的问题：&lt;/p&gt;
&lt;p&gt;1、在什么重要问题上你与其他人有不同看法？&lt;/p&gt;
&lt;p&gt;2、工程问题：你的技术具有突破性，而不紧急是稍有改进码？&lt;/p&gt;
&lt;p&gt;3、时机问题：现在开创事业，时机合适吗？&lt;/p&gt;
&lt;p&gt;4、垄断问题：开创之初，是在一个小市场抢占大份额吗？&lt;/p&gt;
&lt;p&gt;5、人员问题：你有合适的团队吗？&lt;/p&gt;
&lt;p&gt;6、销售问题：除了创造产品，你有没有办法销售产品？&lt;/p&gt;
&lt;p&gt;7、持久问题：未来10年或20年，你能保住自己的市场地位吗？&lt;/p&gt;
&lt;p&gt;8、秘密问题：你有没有找到一个其他人没有发现的独特机会？&lt;/p&gt;
&lt;p&gt;《从0到1》读书笔记思维导图（逆时针阅读）：&lt;/p&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://wendyeq.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
